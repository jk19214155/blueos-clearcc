OBJS_BOOTPACK = bootpack.obj naskfunc.obj hankaku.obj graphic.obj dsctbl.obj \
		int.obj fifo.obj keyboard.obj mouse.obj memory.obj sheet.obj timer.obj \
		mtask.obj window.obj console.obj file.obj tek.obj dav.obj desktop.obj view.obj system.obj acpi.obj bmp.obj  dmg.obj drvier.obj \
		fifo_mouse.obj com.obj vmx.obj ahci.obj pcie.obj sse.obj sprintf.obj memory_disk_sync.obj fat32.obj font.obj efi.obj cache.obj systemtable.obj \
		stdfunc.obj  sqlite_os.obj\
		sqlite3.obj
OBJS_BOOTPACK_WITH_CPP = 

EFI_APP_LIST = shell.efi

TOOLPATH = ../../z_tools/
INCPATH  = ../../z_tools/haribote/

MAKE     = $(TOOLPATH)make.exe -r
NASK     = $(TOOLPATH)nask.exe
NASM     = $(TOOLPATH)nasm.exe
GCC      = $(TOOLPATH)MinGW/bin/gcc.exe -I$(INCPATH) -I ./include -m32  -nostdlib -fno-builtin -ffreestanding \
			-fno-stack-protector -Os -fPIC -fPIE -fno-asynchronous-unwind-tables  \
			-fomit-frame-pointer -O0 -finput-charset=UTF-8 -w -c
GXX64 = $(TOOLPATH)mingw64/bin/g++.exe -I$(INCPATH) -I ./include -m64  -nostdlib \
        -ffreestanding -fno-stack-protector -Os -fPIC -fPIE -fno-asynchronous-unwind-tables \
        -fomit-frame-pointer -O0 -finput-charset=UTF-8 -std=c++17 -fno-rtti -fno-exceptions -w -c
GCC64      = $(TOOLPATH)mingw64/bin/gcc.exe -I$(INCPATH) -I ./include -m64  -nostdlib -fno-builtin -ffreestanding \
			-fno-stack-protector -Os -fPIC -fPIE -fno-asynchronous-unwind-tables  \
			-fomit-frame-pointer -O0 -finput-charset=UTF-8 -w -c


GCC64p      = $(TOOLPATH)mingw64/bin/x86_64-w64-mingw32-g++.exe -I$(INCPATH) -I ./include -m64   -fno-builtin -ffreestanding \
			-fno-stack-protector -Os -fno-pic -fno-pie -fno-asynchronous-unwind-tables  \
			-fomit-frame-pointer -O0 -finput-charset=UTF-8 -w 
GCCMAC64p      = $(TOOLPATH)mingw64/bin/x86_64-w64-mingw32-gcc.exe -I$(INCPATH) -I ./include -m64   -fno-builtin -ffreestanding \
			-fno-stack-protector -Os -fno-pic -fno-pie -fno-asynchronous-unwind-tables  \
			-fomit-frame-pointer -O0 -finput-charset=UTF-8 -w 

LD		= $(TOOLPATH)mingw64/bin/ld.exe
CC1      = $(TOOLPATH)cc1.exe -I$(INCPATH) -Os -Wall -quiet
GAS2NASK = $(TOOLPATH)gas2nask.exe -a
OBJ2BIM  = $(TOOLPATH)obj2bim.exe
MAKEFONT = $(TOOLPATH)makefont.exe
BIN2OBJ  = $(TOOLPATH)bin2obj.exe
BIM2HRB  = $(TOOLPATH)bim2hrb.exe
RULEFILE = ../haribote.rul
EDIMG    = $(TOOLPATH)edimg.exe
IMGTOL   = $(TOOLPATH)imgtol.com
GOLIB    = $(TOOLPATH)golib00.exe 
COPY     = copy
DEL      = del
SYS_HOME	= C:\Users\hp\Documents\GitHub\blueos-clearcc\HARIBOTE
LIB_HOME	= C:\Users\hp\Documents\GitHub\Z_TOOLS\HARIBOTE

# �f�t�H���g����

default :
#	$(MAKE) ipl09.bin �{�n?�s�g�pIPL??���@
#	$(MAKE) haribote.sys �{�n?�s�g�p���{�I�H��? 
	$(MAKE) bootpack.sys
	$(MAKE) $(EFI_APP_LIST)

# �t�@�C�������K��
bootpack.sys : $(OBJS_BOOTPACK) $(OBJS_BOOTPACK_WITH_CPP)
	$(GCC64p) -o bootpack.sys -nostdlib  -s -Wl,--subsystem,10 -Wl,-Map=output.map -e HariMain -static-libgcc -shared $(OBJS_BOOTPACK) $(OBJS_BOOTPACK_WITH_CPP)
ipl09.bin : ipl09.nas makefile
	$(NASK) ipl09.nas ipl09.bin ipl09.lst

asmhead.bin : asmhead.nas makefile
#	$(NASK) asmhead.nas asmhead.bin asmhead.lst
	$(NASM) asmhead.nas -f bin -o asmhead.bin -l asmhead.lst

hankaku.bin : hankaku.txt makefile
	$(MAKEFONT) hankaku.txt hankaku.bin

hankaku.obj : hankaku.bin makefile
#	$(BIN2OBJ) hankaku.bin hankaku.obj _hankaku

bootpack.bim : $(OBJS_BOOTPACK) makefile
	$(OBJ2BIM) @$(RULEFILE) out:bootpack.bim stack:3136k map:bootpack.map \
		$(OBJS_BOOTPACK)
# 3MB+64KB=3136KB

bootpack.hrb : bootpack.bim makefile
	$(BIM2HRB) bootpack.bim bootpack.hrb 0

haribote.sys : asmhead.bin bootpack.hrb makefile
	copy /B asmhead.bin+bootpack.hrb haribote.sys

naskfunc.obj : naskfunc.nas makefile
	$(NASM) naskfunc.nas -f elf64 -o naskfunc.obj -l naskfunc.lst

# ��ʋK��

%.gas : %.c bootpack.h makefile
	$(CC1) -o $*.gas $*.c

%.nas : %.gas makefile
	$(GAS2NASK) $*.gas $*.nas

sqlite3.obj: sqlite3.c makefile bootpack.h sqlite3.h
	$(GCC64)  sqlite3.c -o sqlite3.obj -l sqlite3.lst -DSQLITE_THREADSAFE=0 -DSQLITE_OS_OTHER=1 -DSQLITE_OS_WIN=0 -DSQLITE_OMIT_LOCALTIME

#%.obj : %.nas makefile bootpack.h
%.obj : %.c makefile bootpack.h
#	$(NASK) $*.nas $*.obj $*.lst
#	$(NASM) -f elf32 $*.nas -o $*.obj  -l $*.lst
	$(GCC64)  $*.c -o $*.obj -l $*.lst

# �R�}���h

%.efi : makefile %.obj
	$(GCC64p) -o $*.efi -nostdlib  -s -Wl,--subsystem,10 -e eif_main -static-libgcc -shared $*.obj
clean :
	-$(DEL) asmhead.bin
	-$(DEL) hankaku.bin
	-$(DEL) *.lst
	-$(DEL) *.obj
	-$(DEL) *.map
	-$(DEL) *.bim
	-$(DEL) *.hrb

src_only :
	$(MAKE) clean
	-$(DEL) ipl09.bin
	-$(DEL) haribote.sys
