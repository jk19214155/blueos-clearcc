     1 00000000                                 ; haribote-os boot asm
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4 00000000                                 [INSTRSET "i486p"]
     5 00000000                                 
     6  = 00000105                              VBEMODE	EQU		0x105			; 1024 x  768 x 8bitカラー
     7 00000000                                 ; （画面モード一覧）
     8 00000000                                 ;	0x100 :  640 x  400 x 8bitカラー
     9 00000000                                 ;	0x101 :  640 x  480 x 8bitカラー
    10 00000000                                 ;	0x103 :  800 x  600 x 8bitカラー
    11 00000000                                 ;	0x105 : 1024 x  768 x 8bitカラー
    12 00000000                                 ;	0x107 : 1280 x 1024 x 8bitカラー
    13 00000000                                 
    14  = 00280000                              BOTPAK	EQU		0x00280000		; bootpackのロード先
    15  = 00100000                              DSKCAC	EQU		0x00100000		; ディスクキャッシュの場所
    16  = 00008000                              DSKCAC0	EQU		0x00008000		; ディスクキャッシュの場所（リアルモード）
    17 00000000                                 
    18 00000000                                 ; BOOT_INFO関係
    19  = 00000FF0                              CYLS	EQU		0x0ff0			; ブートセクタが設定する
    20  = 00000FF1                              LEDS	EQU		0x0ff1
    21  = 00000FF2                              VMODE	EQU		0x0ff2			; 色数に関する情報。何ビットカラーか？
    22  = 00000FF4                              SCRNX	EQU		0x0ff4			; 解像度のX
    23  = 00000FF6                              SCRNY	EQU		0x0ff6			; 解像度のY
    24  = 00000FF8                              VRAM	EQU		0x0ff8			; グラフィックバッファの開始番地
    25                                          		ORG		0xc200			; このプログラムがどこに読み込まれるのか
    26 0000C200                                 		
    27 0000C200                                 _cpu_init_setup:
    28 0000C200 EB 18                           		jmp start
    29 0000C202                                 _gdtr2: ;0xc202
    30 0000C202 00000000 00000000               	RESD 2
    31 0000C20A                                 _idtr2: ;0xc20a
    32 0000C20A 00000000 00000000               	resd 2
    33 0000C212                                 _resd_cpu_num: ;0xc212
    34 0000C212 00000000                        	resd 1
    35 0000C216                                 _cpu_list: ;0xc216
    36 0000C216 00000000                        	resd 1
    37 0000C21A                                 start:
    38 0000C21A                                 ;首先查看是否是bsp，然后决定下面的操作
    39 0000C21A 66 B9 0000001B                  		mov ecx,0x1b
    40 0000C220 0F 32                           		db 0x0f,0x32;rdmsr
    41 0000C222 66 A9 00000100                  		test eax,1<<8
    42 0000C228 75 3A                           		jnz start_bsp
    43 0000C22A FA                              		cli
    44 0000C22B 66 FF 06 8016                   		inc dword[0x8016] ;增加处理器队列
    45 0000C230 EB 04                           		jmp start_ap
    46 0000C232                                 ap_lock:
    47 0000C232 00000000                        		resd 1
    48 0000C236                                 start_ap:
    49 0000C236 90                              		nop
    50 0000C237 90                              		nop
    51 0000C238 66 0F BA 2E C232 00             		bts dword[ap_lock],0
    52 0000C23F 73 F5                           		jnc start_ap
    53 0000C241 0F 01 16 C202                   		lgdt [_gdtr2]
    54 0000C246 0F 01 1E C20A                   		lidt [_idtr2]
    55 0000C24B                                 		
    56 0000C24B 66 FF 06 8012                   		inc dword[0x8012]
    57 0000C250 66 0F BA 3E C232 00             		btc dword[ap_lock],0
    58 0000C257 EB 00                           		jmp ap_loop
    59 0000C259                                 ap_loop:
    60 0000C259 F4                              		hlt
    61 0000C25A EB FD                           		jmp ap_loop
    62 0000C25C 66 EA 0000001B 0010             		jmp dword 2*8:0x0000001b
    63 0000C264                                 start_bsp:
    64 0000C264 66 C7 06 C232 00000000          		mov dword[ap_lock],0
    65 0000C26D 66 C7 06 C212 00000000          		mov dword[_resd_cpu_num],0
    66 0000C276                                 		
    67 0000C276 0F 20 E0                        		mov eax,cr4
    68 0000C279 66 83 C8 10                     		or eax,16
    69 0000C27D 0F 22 E0                        		mov cr4,eax
    70 0000C280                                 ; VBE存在確認
    71 0000C280 B8 9000                         		MOV		AX,0x9000
    72 0000C283 8E C0                           		MOV		ES,AX
    73 0000C285 BF 0000                         		MOV		DI,0
    74 0000C288 B8 4F00                         		MOV		AX,0x4f00
    75 0000C28B CD 10                           		INT		0x10
    76 0000C28D 3D 004F                         		CMP		AX,0x004f
    77 0000C290 75 52                           		JNE		scrn320
    78 0000C292                                 
    79 0000C292                                 ; VBEのバージョンチェック
    80 0000C292                                 
    81 0000C292 26 8B 45 04                     		MOV		AX,[ES:DI+4]
    82 0000C296 3D 0200                         		CMP		AX,0x0200
    83 0000C299 72 49                           		JB		scrn320			; if (AX < 0x0200) goto scrn320
    84 0000C29B                                 
    85 0000C29B                                 ; 画面モード情報を得る
    86 0000C29B                                 
    87 0000C29B B9 0105                         		MOV		CX,VBEMODE
    88 0000C29E B8 4F01                         		MOV		AX,0x4f01
    89 0000C2A1 CD 10                           		INT		0x10
    90 0000C2A3 3D 004F                         		CMP		AX,0x004f
    91 0000C2A6 75 3C                           		JNE		scrn320
    92 0000C2A8                                 
    93 0000C2A8                                 ; 画面モード情報の確認
    94 0000C2A8                                 
    95 0000C2A8 26 80 7D 19 08                  		CMP		BYTE [ES:DI+0x19],8
    96 0000C2AD 75 35                           		JNE		scrn320
    97 0000C2AF 26 80 7D 1B 04                  		CMP		BYTE [ES:DI+0x1b],4
    98 0000C2B4 75 2E                           		JNE		scrn320
    99 0000C2B6 26 8B 05                        		MOV		AX,[ES:DI+0x00]
   100 0000C2B9 25 0080                         		AND		AX,0x0080
   101 0000C2BC 74 26                           		JZ		scrn320			; モード属性のbit7が0だったのであきらめる
   102 0000C2BE                                 
   103 0000C2BE                                 ; 画面モードの切り替え
   104 0000C2BE                                 
   105 0000C2BE BB 4105                         		MOV		BX,VBEMODE+0x4000
   106 0000C2C1 B8 4F02                         		MOV		AX,0x4f02
   107 0000C2C4 CD 10                           		INT		0x10
   108 0000C2C6 C6 06 0FF2 08                   		MOV		BYTE [VMODE],8	; 画面モードをメモする（C言語が参照する）
   109 0000C2CB 26 8B 45 12                     		MOV		AX,[ES:DI+0x12]
   110 0000C2CF A3 0FF4                         		MOV		[SCRNX],AX
   111 0000C2D2 26 8B 45 14                     		MOV		AX,[ES:DI+0x14]
   112 0000C2D6 A3 0FF6                         		MOV		[SCRNY],AX
   113 0000C2D9 66 26 8B 45 28                  		MOV		EAX,[ES:DI+0x28]
   114 0000C2DE 66 A3 0FF8                      		MOV		[VRAM],EAX
   115 0000C2E2 EB 20                           		JMP		keystatus
   116 0000C2E4                                 
   117 0000C2E4                                 scrn320:
   118 0000C2E4 B0 13                           		MOV		AL,0x13			; VGAグラフィックス、320x200x8bitカラー
   119 0000C2E6 B4 00                           		MOV		AH,0x00
   120 0000C2E8 CD 10                           		INT		0x10
   121 0000C2EA C6 06 0FF2 08                   		MOV		BYTE [VMODE],8	; 画面モードをメモする（C言語が参照する）
   122 0000C2EF C7 06 0FF4 0140                 		MOV		WORD [SCRNX],320
   123 0000C2F5 C7 06 0FF6 00C8                 		MOV		WORD [SCRNY],200
   124 0000C2FB 66 C7 06 0FF8 000A0000          		MOV		DWORD [VRAM],0x000a0000
   125 0000C304                                 
   126 0000C304                                 ; 通过bios获取led灯的状态
   127 0000C304                                 
   128 0000C304                                 keystatus:
   129 0000C304 B4 02                           		MOV		AH,0x02
   130 0000C306 CD 16                           		INT		0x16 			; keyboard BIOS
   131 0000C308 A2 0FF1                         		MOV		[LEDS],AL
   132 0000C30B                                 
   133 0000C30B                                 ; PICが一切の割り込みを受け付けないようにする
   134 0000C30B                                 ;	AT互換機の仕様では、PICの初期化をするなら、
   135 0000C30B                                 ;	こいつをCLI前にやっておかないと、たまにハングアップする
   136 0000C30B                                 ;	PICの初期化はあとでやる
   137 0000C30B                                 ; 禁用pic中断
   138 0000C30B B0 FF                           		MOV		AL,0xff
   139 0000C30D E6 21                           		OUT		0x21,AL
   140 0000C30F 90                              		NOP						; OUT命令を連続させるとうまくいかない機種があるらしいので
   141 0000C310 E6 A1                           		OUT		0xa1,AL
   142 0000C312                                 
   143 0000C312 FA                              		CLI						; さらにCPUレベルでも割り込み禁止
   144 0000C313                                 
   145 0000C313                                 ; CPUから1MB以上のメモリにアクセスできるように、A20GATEを設定
   146 0000C313                                 
   147 0000C313 E8 00B5                         		CALL	waitkbdout
   148 0000C316 B0 D1                           		MOV		AL,0xd1
   149 0000C318 E6 64                           		OUT		0x64,AL
   150 0000C31A E8 00AE                         		CALL	waitkbdout
   151 0000C31D B0 DF                           		MOV		AL,0xdf			; enable A20
   152 0000C31F E6 60                           		OUT		0x60,AL
   153 0000C321 E8 00A7                         		CALL	waitkbdout
   154 0000C324                                 
   155 0000C324                                 ; プロテクトモード移行
   156 0000C324                                 
   157 0000C324 0F 01 16 C40A                   		LGDT	[GDTR0]			; 暫定GDTを設定
   158 0000C329 0F 20 C0                        		MOV		EAX,CR0
   159 0000C32C 66 25 7FFFFFFF                  		AND		EAX,0x7fffffff	; bit31を0にする（ページング禁止のため）
   160 0000C332 66 83 C8 01                     		OR		EAX,0x00000001	; bit0を1にする（プロテクトモード移行のため）
   161 0000C336 0F 22 C0                        		MOV		CR0,EAX
   162 0000C339 EB 00                           		JMP		pipelineflush
   163 0000C33B                                 pipelineflush:
   164 0000C33B B8 0008                         		MOV		AX,1*8			;  読み書き可能セグメント32bit
   165 0000C33E 8E D8                           		MOV		DS,AX
   166 0000C340 8E C0                           		MOV		ES,AX
   167 0000C342 8E E0                           		MOV		FS,AX
   168 0000C344 8E E8                           		MOV		GS,AX
   169 0000C346 8E D0                           		MOV		SS,AX
   170 0000C348                                 
   171 0000C348                                 ; bootpackの転送
   172 0000C348                                 
   173 0000C348 66 BE 0000C410                  		MOV		ESI,bootpack	; 転送元
   174 0000C34E 66 BF 00280000                  		MOV		EDI,BOTPAK		; 転送先
   175 0000C354 66 B9 00020000                  		MOV		ECX,512*1024/4
   176 0000C35A E8 0077                         		CALL	memcpy
   177 0000C35D                                 
   178 0000C35D                                 ; ついでにディスクデータも本来の位置へ転送
   179 0000C35D                                 
   180 0000C35D                                 ; まずはブートセクタから
   181 0000C35D                                 
   182 0000C35D 66 BE 00007C00                  		MOV		ESI,0x7c00		; 転送元
   183 0000C363 66 BF 00100000                  		MOV		EDI,DSKCAC		; 転送先
   184 0000C369 66 B9 00000080                  		MOV		ECX,512/4
   185 0000C36F E8 0062                         		CALL	memcpy
   186 0000C372                                 
   187 0000C372                                 ; 残り全部
   188 0000C372                                 
   189 0000C372 66 BE 00008200                  		MOV		ESI,DSKCAC0+512	; 転送元
   190 0000C378 66 BF 00100200                  		MOV		EDI,DSKCAC+512	; 転送先
   191 0000C37E 66 B9 00000000                  		MOV		ECX,0
   192 0000C384 8A 0E 0FF0                      		MOV		CL,BYTE [CYLS]
   193 0000C388 66 69 C9 00001200               		IMUL	ECX,512*18*2/4	; シリンダ数からバイト数/4に変換
   194 0000C38F 66 81 E9 00000080               		SUB		ECX,512/4		; IPLの分だけ差し引く
   195 0000C396 E8 003B                         		CALL	memcpy
   196 0000C399                                 
   197 0000C399                                 ; asmheadでしなければいけないことは全部し終わったので、
   198 0000C399                                 ;	あとはbootpackに任せる
   199 0000C399                                 
   200 0000C399                                 ; bootpackの起動
   201 0000C399                                 
   202 0000C399 66 BB 00280000                  		MOV		EBX,BOTPAK
   203 0000C39F 67 66 8B 4B 10                  		MOV		ECX,[EBX+16]
   204 0000C3A4 66 83 C1 03                     		ADD		ECX,3			; ECX += 3;
   205 0000C3A8 66 C1 E9 02                     		SHR		ECX,2			; ECX /= 4;
   206 0000C3AC 74 10                           		JZ		skip			; 転送するべきものがない
   207 0000C3AE 67 66 8B 73 14                  		MOV		ESI,[EBX+20]	; 転送元
   208 0000C3B3 66 01 DE                        		ADD		ESI,EBX
   209 0000C3B6 67 66 8B 7B 0C                  		MOV		EDI,[EBX+12]	; 転送先
   210 0000C3BB E8 0016                         		CALL	memcpy
   211 0000C3BE                                 skip:
   212 0000C3BE 67 66 8B 63 0C                  		MOV		ESP,[EBX+12]	; スタック初期値
   213 0000C3C3 66 EA 0000001B 0010             		JMP		DWORD 2*8:0x0000001b
   214 0000C3CB                                 
   215 0000C3CB                                 waitkbdout:
   216 0000C3CB E4 64                           		IN		 AL,0x64
   217 0000C3CD 24 02                           		AND		 AL,0x02
   218 0000C3CF E4 60                           		IN		 AL,0x60 		; から読み(受信バッファが悪さをしないように)
   219 0000C3D1 75 F8                           		JNZ		waitkbdout		; ANDの結果が0でなければwaitkbdoutへ
   220 0000C3D3 C3                              		RET
   221 0000C3D4                                 
   222 0000C3D4                                 memcpy:
   223 0000C3D4 67 66 8B 06                     		MOV		EAX,[ESI]
   224 0000C3D8 66 83 C6 04                     		ADD		ESI,4
   225 0000C3DC 67 66 89 07                     		MOV		[EDI],EAX
   226 0000C3E0 66 83 C7 04                     		ADD		EDI,4
   227 0000C3E4 66 83 E9 01                     		SUB		ECX,1
   228 0000C3E8 75 EA                           		JNZ		memcpy			; 引き算した結果が0でなければmemcpyへ
   229 0000C3EA C3                              		RET
   230 0000C3EB                                 ; memcpyはアドレスサイズプリフィクスを入れ忘れなければ、ストリング命令でも書ける
   231 0000C3EB                                 
   232 0000C3EB 00 00 00 00 00                  		ALIGNB	16
   233 0000C3F0                                 GDT0:
   234 0000C3F0 00 00 00 00 00 00 00 00         		RESB	8				; ヌルセレクタ
   235 0000C3F8 FFFF 0000 9200 00CF             		DW		0xffff,0x0000,0x9200,0x00cf	; 読み書き可能セグメント32bit
   236 0000C400 FFFF 0000 9A28 0047             		DW		0xffff,0x0000,0x9a28,0x0047	; 実行可能セグメント32bit（bootpack用）
   237 0000C408 0000                            		DW		0
   238 0000C40A                                 GDTR0:
   239 0000C40A 0017                            		DW		8*3-1
   240 0000C40C 0000C3F0                        		DD		GDT0
   241 0000C410                                 		ALIGNB	16
   242 0000C410                                 bootpack:
