	.file	"bootpack.c"
	.data
_keytable0.0:
	.byte	0
	.byte	0
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	48
	.byte	45
	.byte	94
	.byte	8
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	64
	.byte	91
	.byte	10
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	59
	.byte	58
	.byte	0
	.byte	0
	.byte	93
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	44
	.byte	46
	.byte	47
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
_keytable1.1:
	.byte	0
	.byte	0
	.byte	33
	.byte	34
	.byte	35
	.byte	36
	.byte	37
	.byte	38
	.byte	39
	.byte	40
	.byte	41
	.byte	126
	.byte	61
	.byte	126
	.byte	8
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	96
	.byte	123
	.byte	10
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	43
	.byte	42
	.byte	0
	.byte	0
	.byte	125
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	60
	.byte	62
	.byte	63
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	95
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	124
	.byte	0
	.byte	0
_keytable2.2:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	10
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	63
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
LC0:
	.ascii "nihongo.fnt\0"
LC2:
	.ascii "\12Break(mouse) :\12\0"
LC1:
	.ascii "\12Break(key) :\12\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$1324, %esp
	movl	$0, -1252(%ebp)
	movl	$-1, -1264(%ebp)
	movl	$0, -1268(%ebp)
	movl	$2147483647, -1272(%ebp)
	movl	$0, -1276(%ebp)
	movl	$0, -1288(%ebp)
	movl	$0, -1292(%ebp)
	movl	$0, -1296(%ebp)
	movb	4081, %al
	sarb	$4, %al
	movl	%eax, %edx
	andl	$7, %edx
	movl	%edx, -1300(%ebp)
	movl	$-1, -1304(%ebp)
	movl	$0, -1308(%ebp)
	movl	$-1, -1312(%ebp)
	movl	$-1, -1316(%ebp)
	movl	$0, -1320(%ebp)
	movl	$0, -1324(%ebp)
	call	_init_gdtidt
	pushl	$3932160
	call	_memman_init
	pushl	$-536870913
	pushl	$-1071644672
	pushl	$3932160
	call	_memman_free
	leal	-892(%ebp), %eax
	pushl	%eax
	call	_init_page
	leal	-892(%ebp), %edx
	pushl	$1
	pushl	$16
	pushl	$2555911
	pushl	$-1073741824
	pushl	$2523136
	pushl	%edx
	call	_memmam_link_page_32_m
	leal	-892(%ebp), %eax
	addl	$44, %esp
	pushl	$1
	pushl	$1
	pushl	$2551815
	pushl	$-1073610752
	pushl	$2523136
	pushl	%eax
	call	_memmam_link_page_32_m
	leal	-892(%ebp), %edx
	pushl	$1
	pushl	$128
	pushl	$2621447
	pushl	$-1072693248
	pushl	$2523136
	pushl	%edx
	call	_memmam_link_page_32_m
	leal	-892(%ebp), %eax
	addl	$48, %esp
	pushl	$1
	pushl	$2304
	pushl	$7
	pushl	$7
	pushl	$2523136
	pushl	%eax
	call	_memmam_link_page_32_m
	leal	-892(%ebp), %edx
	pushl	$1
	pushl	$130048
	pushl	$-536870905
	pushl	$-536870912
	pushl	$2523136
	pushl	%edx
	call	_memmam_link_page_32_m
	addl	$48, %esp
	leal	-892(%ebp), %eax
	movl	%eax, 2551808
	call	_load_cr0
	movl	%eax, %edi
	pushl	$2523136
	orl	$-2147483648, %edi
	call	_store_cr3
	pushl	%edi
	call	_store_cr0
	pushl	$-1073741824
	pushl	$65535
	call	_load_gdtr
	pushl	$-1073608704
	pushl	$65535
	call	_load_idtr
	call	_support_apic
	addl	$24, %esp
	decl	%eax
	je	L134
	call	_init_pic
L3:
	leal	-188(%ebp), %ebx
	call	_io_sti
	pushl	$0
	leal	-732(%ebp), %eax
	pushl	%eax
	pushl	$128
	pushl	%ebx
	call	_fifo32_init
	movl	%ebx, 4076
	call	_init_pit
	pushl	$256
	pushl	%ebx
	call	_init_keyboard
	leal	-876(%ebp), %eax
	pushl	%eax
	pushl	$512
	pushl	%ebx
	call	_enable_mouse
	addl	$36, %esp
	call	_support_apic
	testl	%eax, %eax
	jne	L4
	pushl	$248
	pushl	$33
	call	_io_out8
	pushl	$239
	pushl	$161
	call	_io_out8
	addl	$16, %esp
L4:
	pushl	$0
	leal	-860(%ebp), %eax
	pushl	%eax
	xorl	%ebx, %ebx
	pushl	$32
	leal	-220(%ebp), %eax
	pushl	%eax
	call	_fifo32_init
	call	_init_palette
	pushl	$22528
	pushl	$3932160
	call	_memman_alloc_4k
	leal	-892(%ebp), %edx
	pushl	$0
	movl	%eax, %edi
	pushl	$6
	pushl	$7
	pushl	%eax
	pushl	$2523136
	pushl	%edx
	call	_memmam_link_page_32_m
	addl	$48, %esp
	movl	$2, 2551836
	movl	$0, -1248(%ebp)
	cmpl	2551836, %ebx
	jge	L117
L9:
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	leal	-892(%ebp), %eax
	pushl	4088
	pushl	%eax
	pushl	$3932160
	call	_shtctl_init
	addl	$20, %esp
	movl	%eax, -60(%ebp,%ebx,4)
	movl	-1248(%ebp), %eax
	movl	-60(%ebp,%eax,4), %edx
	incl	%eax
	movl	%eax, %ebx
	movl	$512, 20(%edx)
	movl	%eax, -1248(%ebp)
	movl	%edi, 1048(%edx)
	cmpl	2551836, %eax
	jl	L9
L117:
	pushl	$3932160
	call	_task_init
	movl	$2523136, 72(%esi)
	pushl	$2
	movl	%eax, -1284(%ebp)
	pushl	$1
	movl	%eax, -164(%ebp)
	pushl	%eax
	call	_task_run
	movl	-60(%ebp), %eax
	movl	%eax, 4068
	leal	-60(%ebp), %eax
	movl	%eax, 2551832
	movl	-1284(%ebp), %eax
	movb	$0, 204(%eax)
	pushl	-60(%ebp)
	call	_sheet_alloc
	movswl	4086,%edx
	movl	%eax, -1196(%ebp)
	movswl	4084,%eax
	imull	%edx, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$0
	movswl	4086,%edx
	movl	%eax, %ebx
	movswl	4084,%eax
	imull	%edx, %eax
	addl	$4095, %eax
	leal	-892(%ebp), %edx
	sarl	$12, %eax
	pushl	%eax
	pushl	$7
	pushl	%ebx
	pushl	$2523136
	pushl	%edx
	call	_memmam_link_page_32_m
	addl	$52, %esp
	pushl	$-1
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	%ebx
	pushl	-1196(%ebp)
	call	_sheet_setbuf
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	%ebx
	call	_init_screen8
	addl	$32, %esp
	pushl	-56(%ebp)
	call	_sheet_alloc
	movswl	4086,%edx
	movl	%eax, -1192(%ebp)
	movswl	4084,%eax
	imull	%edx, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$0
	movswl	4086,%edx
	movl	%eax, %ebx
	movswl	4084,%eax
	imull	%edx, %eax
	addl	$4095, %eax
	sarl	$12, %eax
	pushl	%eax
	leal	-892(%ebp), %eax
	pushl	$7
	pushl	%ebx
	pushl	$2523136
	pushl	%eax
	call	_memmam_link_page_32_m
	addl	$36, %esp
	pushl	$-1
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	%ebx
	pushl	-1192(%ebp)
	call	_sheet_setbuf
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	%ebx
	leal	-1148(%ebp), %ebx
	call	_init_screen8
	addl	$32, %esp
	pushl	-1280(%ebp)
	pushl	-60(%ebp)
	call	_open_console
	pushl	-60(%ebp)
	movl	%eax, -1328(%ebp)
	call	_sheet_alloc
	pushl	$99
	pushl	$16
	movl	%eax, -1244(%ebp)
	pushl	$16
	pushl	%ebx
	pushl	%eax
	call	_sheet_setbuf
	addl	$32, %esp
	pushl	$99
	pushl	%ebx
	call	_init_mouse_cursor8
	pushl	-56(%ebp)
	call	_sheet_alloc
	pushl	$99
	pushl	$16
	pushl	$16
	movl	%eax, -1240(%ebp)
	pushl	%ebx
	pushl	%eax
	call	_sheet_setbuf
	addl	$32, %esp
	pushl	$99
	pushl	%ebx
	movl	$2, %ebx
	call	_init_mouse_cursor8
	movswl	4084,%eax
	leal	-16(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	movl	%eax, -1256(%ebp)
	movswl	4086,%eax
	pushl	$0
	leal	-44(%eax), %ecx
	pushl	$0
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	pushl	-1196(%ebp)
	movl	%eax, -1260(%ebp)
	leal	-220(%ebp), %ebx
	call	_sheet_slide
	pushl	$4
	pushl	$32
	pushl	-1328(%ebp)
	call	_sheet_slide
	addl	$32, %esp
	pushl	-1260(%ebp)
	pushl	-1256(%ebp)
	pushl	-1244(%ebp)
	call	_sheet_slide
	pushl	$0
	pushl	-1196(%ebp)
	call	_sheet_updown
	pushl	$1
	pushl	-1328(%ebp)
	call	_sheet_updown
	pushl	$2
	pushl	-1244(%ebp)
	call	_sheet_updown
	addl	$36, %esp
	pushl	$0
	pushl	$0
	pushl	-1192(%ebp)
	call	_sheet_slide
	pushl	$4
	pushl	$32
	pushl	-1328(%ebp)
	call	_sheet_slide
	pushl	-1260(%ebp)
	pushl	-1256(%ebp)
	pushl	-1240(%ebp)
	call	_sheet_slide
	addl	$36, %esp
	pushl	$0
	pushl	-1192(%ebp)
	call	_sheet_updown
	pushl	$1
	pushl	-1328(%ebp)
	call	_sheet_updown
	pushl	$2
	pushl	-1240(%ebp)
	call	_sheet_updown
	pushl	-1328(%ebp)
	call	_keywin_on
	pushl	$237
	pushl	%ebx
	call	_fifo32_put
	addl	$36, %esp
	pushl	-1300(%ebp)
	pushl	%ebx
	call	_fifo32_put
	pushl	$11520
	pushl	$3932160
	call	_memman_alloc_4k
	leal	-892(%ebp), %edx
	pushl	$0
	movl	%eax, %esi
	pushl	$3
	pushl	$7
	pushl	%eax
	pushl	$2523136
	pushl	%edx
	call	_memmam_link_page_32_m
	addl	$40, %esp
	pushl	$1049088
	pushl	%esi
	call	_file_readfat
	pushl	$224
	pushl	$1058304
	pushl	$LC0
	call	_file_search
	addl	$20, %esp
	movl	%eax, %edx
	testl	%eax, %eax
	je	L10
	movl	28(%eax), %eax
	pushl	%esi
	movl	%eax, -1248(%ebp)
	leal	-1248(%ebp), %eax
	pushl	%eax
	movzwl	26(%edx), %eax
	pushl	%eax
	call	_file_loadfile2
	addl	$12, %esp
	movl	%eax, %ebx
L11:
	movl	%ebx, 4072
	xorl	%eax, %eax
	movl	$0, -1248(%ebp)
L26:
	sall	$12, %eax
	leal	-892(%ebp), %edx
	leal	(%eax,%esi), %eax
	pushl	%eax
	pushl	$2523136
	pushl	%edx
	call	_memman_unlink_page_32
	pushl	%eax
	leal	-892(%ebp), %eax
	pushl	%eax
	call	_memman_free_page_32
	movl	-1248(%ebp), %eax
	incl	%eax
	addl	$20, %esp
	movl	%eax, -1248(%ebp)
	cmpl	$2, %eax
	jle	L26
	pushl	$11520
	pushl	%esi
	pushl	$3932160
	call	_memman_free_4k
L131:
	addl	$12, %esp
L27:
	leal	-220(%ebp), %ebx
	pushl	%ebx
	call	_fifo32_status
	popl	%edi
	testl	%eax, %eax
	jle	L30
	cmpl	$0, -1304(%ebp)
	js	L135
L30:
	leal	-188(%ebp), %ebx
	call	_io_cli
	pushl	%ebx
	call	_fifo32_status
	popl	%esi
	testl	%eax, %eax
	je	L136
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, -1248(%ebp)
	call	_io_sti
	popl	%ebx
	cmpl	$0, -1328(%ebp)
	je	L37
	movl	-1328(%ebp), %eax
	cmpl	$0, 28(%eax)
	jne	L37
	movl	-1252(%ebp), %eax
	movl	$0, -1328(%ebp)
	movl	-60(%ebp,%eax,4), %edx
	movl	16(%edx), %eax
	cmpl	$1, %eax
	je	L37
	movl	20(%edx,%eax,4), %eax
	pushl	%eax
	movl	%eax, -1328(%ebp)
	call	_keywin_on
	popl	%ecx
L37:
	movl	-1248(%ebp), %ecx
	leal	-256(%ecx), %eax
	cmpl	$255, %eax
	jbe	L137
	leal	-512(%ecx), %eax
	cmpl	$255, %eax
	jbe	L138
	leal	-768(%ecx), %eax
	cmpl	$255, %eax
	jbe	L139
	leal	-1024(%ecx), %eax
	cmpl	$999, %eax
	jbe	L140
	leal	-2024(%ecx), %eax
	cmpl	$255, %eax
	ja	L27
	movl	-1252(%ebp), %eax
	movl	$0, -1248(%ebp)
	movl	-60(%ebp,%eax,4), %edx
	imull	$44, %ecx, %eax
	addl	1048(%edx), %eax
	leal	-89056(%eax), %ebx
	xorl	%eax, %eax
L115:
	sall	$12, %eax
	leal	-892(%ebp), %edx
	addl	(%ebx), %eax
	pushl	%eax
	pushl	$2523136
	pushl	%edx
	call	_memman_unlink_page_32
	pushl	%eax
	leal	-892(%ebp), %eax
	pushl	%eax
	call	_memman_free_page_32
	movl	-1248(%ebp), %eax
	incl	%eax
	addl	$20, %esp
	movl	%eax, -1248(%ebp)
	cmpl	$10, %eax
	jle	L115
	pushl	$42240
	pushl	(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	pushl	%ebx
	call	_sheet_free
	addl	$16, %esp
	jmp	L27
L140:
	imull	$276, %ecx, %ecx
	addl	_taskctl, %ecx
	leal	-278536(%ecx), %eax
	pushl	%eax
	call	_close_constask
L130:
	popl	%eax
	jmp	L27
L139:
	movl	-1252(%ebp), %eax
	movl	-60(%ebp,%eax,4), %edx
	imull	$44, %ecx, %eax
	addl	1048(%edx), %eax
	subl	$33792, %eax
	pushl	%eax
	call	_close_console
	jmp	L130
L138:
	movzbl	-1248(%ebp), %eax
	pushl	%eax
	leal	-876(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	popl	%ecx
	popl	%ebx
	testl	%eax, %eax
	je	L27
	movl	-868(%ebp), %edx
	movl	-872(%ebp), %eax
	addl	%edx, -1260(%ebp)
	addl	%eax, -1256(%ebp)
	js	L141
L80:
	cmpl	$0, -1260(%ebp)
	js	L142
L81:
	movswl	4084,%eax
	decl	%eax
	cmpl	%eax, -1256(%ebp)
	jle	L82
	movl	%eax, -1256(%ebp)
L82:
	movswl	4086,%eax
	decl	%eax
	cmpl	%eax, -1260(%ebp)
	jle	L83
	movl	%eax, -1260(%ebp)
L83:
	movl	-1256(%ebp), %edx
	movl	-1260(%ebp), %eax
	movl	%edx, -1264(%ebp)
	movl	%eax, -1268(%ebp)
	testl	$1, -864(%ebp)
	jne	L143
	movl	$0, -1288(%ebp)
	movl	$0, -1292(%ebp)
	movl	$-1, -1312(%ebp)
	cmpl	$2147483647, -1272(%ebp)
	je	L27
L132:
	pushl	-1276(%ebp)
	pushl	-1272(%ebp)
	pushl	-1324(%ebp)
	call	_sheet_slide
	movl	$2147483647, -1272(%ebp)
	jmp	L131
L143:
	cmpl	$0, -1312(%ebp)
	js	L144
	movl	-1256(%ebp), %ebx
	movl	-1320(%ebp), %edx
	subl	-1312(%ebp), %ebx
	movl	-1260(%ebp), %esi
	subl	-1316(%ebp), %esi
	movl	-1260(%ebp), %eax
	leal	2(%ebx,%edx), %ebx
	movl	%eax, -1316(%ebp)
	movl	%ebx, -1272(%ebp)
	addl	%esi, -1276(%ebp)
	andl	$-4, -1272(%ebp)
	jmp	L27
L144:
	movl	-1252(%ebp), %edx
	movl	-60(%ebp,%edx,4), %ecx
	movl	16(%ecx), %edi
	decl	%edi
	testl	%edi, %edi
	jle	L126
L100:
	movl	24(%ecx,%edi,4), %eax
	movl	-1260(%ebp), %esi
	movl	-1256(%ebp), %ebx
	movl	%eax, -1324(%ebp)
	subl	16(%eax), %esi
	subl	12(%eax), %ebx
	js	L89
	movl	4(%eax), %eax
	cmpl	%eax, %ebx
	jge	L89
	testl	%esi, %esi
	js	L89
	movl	-1324(%ebp), %edx
	cmpl	8(%edx), %esi
	jge	L89
	imull	%esi, %eax
	movl	%eax, -1336(%ebp)
	movl	(%edx), %edx
	movl	-1336(%ebp), %eax
	addl	%ebx, %eax
	movzbl	(%eax,%edx), %eax
	movl	-1324(%ebp), %edx
	cmpl	20(%edx), %eax
	jne	L145
L89:
	decl	%edi
	testl	%edi, %edi
	jg	L100
L126:
	movl	$-1, -1288(%ebp)
	jmp	L27
L145:
	cmpl	%edx, -1288(%ebp)
	je	L93
	cmpl	$0, -1288(%ebp)
	je	L93
L88:
	testl	%edi, %edi
	jg	L27
	jmp	L126
L93:
	movl	16(%ecx), %eax
	decl	%eax
	pushl	%eax
	pushl	-1324(%ebp)
	call	_sheet_updown
	popl	%eax
	movl	-1328(%ebp), %eax
	popl	%edx
	cmpl	%eax, -1324(%ebp)
	je	L94
	pushl	%eax
	call	_keywin_off
	movl	-1324(%ebp), %edx
	pushl	%edx
	movl	%edx, -1328(%ebp)
	call	_keywin_on
	popl	%edx
	popl	%ecx
L94:
	cmpl	$2, %ebx
	jle	L95
	movl	-1324(%ebp), %edx
	movl	4(%edx), %eax
	subl	$3, %eax
	cmpl	%eax, %ebx
	jge	L95
	cmpl	$2, %esi
	jle	L95
	cmpl	$20, %esi
	jg	L95
	cmpl	$0, -1292(%ebp)
	jne	L95
	movl	-1256(%ebp), %eax
	movl	-1260(%ebp), %edx
	movl	%eax, -1312(%ebp)
	movl	%edx, -1316(%ebp)
	movl	-1324(%ebp), %eax
	movl	-1324(%ebp), %edx
	movl	12(%eax), %eax
	movl	16(%edx), %edx
	movl	%eax, -1320(%ebp)
	movl	%edx, -1276(%ebp)
L96:
	movl	-1324(%ebp), %eax
	movl	4(%eax), %edx
	leal	-21(%edx), %eax
	cmpl	%ebx, %eax
	jg	L97
	leal	-5(%edx), %eax
	cmpl	%eax, %ebx
	jge	L97
	cmpl	$4, %esi
	jle	L97
	cmpl	$18, %esi
	jg	L97
	movl	-1324(%ebp), %edx
	testb	$16, 28(%edx)
	je	L98
	movl	36(%edx), %esi
	pushl	$LC2
	pushl	180(%esi)
	call	_cons_putstr0
	call	_io_cli
	leal	48(%esi), %eax
	movl	%eax, 84(%esi)
	movl	$_asm_end_app, 76(%esi)
	call	_io_sti
	pushl	$0
	pushl	$-1
	pushl	%esi
	call	_task_run
	addl	$20, %esp
L97:
	movl	-1324(%ebp), %eax
	movl	%eax, -1288(%ebp)
	jmp	L88
L98:
	movl	-1324(%ebp), %eax
	movl	36(%eax), %esi
	pushl	$-1
	pushl	%eax
	call	_sheet_updown
	pushl	-1328(%ebp)
	call	_keywin_off
	movl	-1252(%ebp), %edx
	movl	-60(%ebp,%edx,4), %eax
	movl	16(%eax), %edx
	movl	20(%eax,%edx,4), %edx
	pushl	%edx
	movl	%edx, -1328(%ebp)
	call	_keywin_on
	call	_io_cli
	leal	16(%esi), %eax
	pushl	$4
	pushl	%eax
	call	_fifo32_put
	call	_io_sti
	addl	$24, %esp
	jmp	L97
L95:
	movl	$-1, -1292(%ebp)
	jmp	L96
L142:
	movl	$0, -1260(%ebp)
	jmp	L81
L141:
	movl	$0, -1256(%ebp)
	jmp	L80
L137:
	cmpl	$480, %ecx
	je	L146
	cmpl	$383, %ecx
	jg	L43
	cmpl	$0, -1296(%ebp)
	jne	L44
	movb	_keytable0.0-256(%ecx), %al
L133:
	movb	%al, -156(%ebp)
L42:
	movb	-156(%ebp), %dl
	leal	-65(%edx), %eax
	cmpb	$25, %al
	ja	L47
	testl	$4, -1300(%ebp)
	jne	L127
	cmpl	$0, -1296(%ebp)
	je	L49
L47:
	movb	-156(%ebp), %al
	testb	%al, %al
	je	L51
	cmpl	$0, -1328(%ebp)
	je	L51
	movsbl	%al,%eax
	movl	-1328(%ebp), %edx
	addl	$256, %eax
	pushl	%eax
	movl	36(%edx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%eax
	popl	%edx
L51:
	cmpl	$271, -1248(%ebp)
	je	L147
L52:
	movl	-1248(%ebp), %eax
	cmpl	$298, %eax
	je	L148
L54:
	cmpl	$310, %eax
	je	L149
L55:
	cmpl	$426, %eax
	je	L150
L56:
	cmpl	$438, %eax
	je	L151
L57:
	cmpl	$314, %eax
	je	L152
L58:
	cmpl	$325, -1248(%ebp)
	je	L153
L59:
	cmpl	$326, -1248(%ebp)
	je	L154
L60:
	movl	-1248(%ebp), %eax
	cmpl	$312, %eax
	je	L155
L63:
	cmpl	$440, %eax
	je	L156
L64:
	cmpl	$0, -1308(%ebp)
	je	L65
	cmpl	$314, %eax
	jle	L65
	cmpl	$324, %eax
	jg	L65
	leal	-315(%eax), %ebx
	cmpl	2551836, %ebx
	jge	L65
	cmpl	$0, -1288(%ebp)
	je	L67
	pushl	-1288(%ebp)
	call	_sheet_free
	movl	-1288(%ebp), %edx
	movl	-60(%ebp,%ebx,4), %eax
	movl	%eax, 32(%edx)
	movl	-60(%ebp,%ebx,4), %eax
	movl	$-1, 24(%edx)
	pushl	16(%eax)
	pushl	%edx
	call	_sheet_updown
	movl	-1252(%ebp), %edx
	movl	-1244(%ebp,%edx,4), %eax
	pushl	16(%eax)
	pushl	12(%eax)
	pushl	-1244(%ebp,%ebx,4)
	call	_sheet_slide
	addl	$24, %esp
L68:
	movl	-60(%ebp,%ebx,4), %eax
	movl	%ebx, -1252(%ebp)
	movl	%eax, 4068
	pushl	16(%eax)
	pushl	$0
	pushl	12(%eax)
	pushl	8(%eax)
	pushl	$0
	pushl	$0
	pushl	%eax
	call	_sheet_refreshsub
	addl	$28, %esp
L65:
	cmpl	$315, -1248(%ebp)
	je	L157
L70:
	cmpl	$316, -1248(%ebp)
	je	L158
L72:
	cmpl	$343, -1248(%ebp)
	je	L159
L74:
	movl	-1248(%ebp), %eax
	cmpl	$506, %eax
	je	L160
L75:
	cmpl	$510, %eax
	jne	L27
	call	_wait_KBC_sendready
	pushl	-1304(%ebp)
	pushl	$96
	call	_io_out8
	popl	%esi
	popl	%edi
	jmp	L27
L160:
	movl	$-1, -1304(%ebp)
	jmp	L75
L159:
	movl	-1252(%ebp), %eax
	movl	-60(%ebp,%eax,4), %edx
	movl	16(%edx), %eax
	decl	%eax
	pushl	%eax
	pushl	28(%edx)
	call	_sheet_updown
	popl	%eax
	popl	%edx
	jmp	L74
L158:
	cmpl	$0, -1296(%ebp)
	je	L72
	cmpl	$0, -1328(%ebp)
	je	L73
	pushl	-1328(%ebp)
	call	_keywin_off
	popl	%ecx
L73:
	movl	-1252(%ebp), %edx
	pushl	-1280(%ebp)
	pushl	-60(%ebp,%edx,4)
	call	_open_console
	pushl	$32
	pushl	$32
	pushl	%eax
	movl	%eax, -1328(%ebp)
	call	_sheet_slide
	movl	-1252(%ebp), %edx
	movl	-60(%ebp,%edx,4), %eax
	pushl	16(%eax)
	pushl	-1328(%ebp)
	call	_sheet_updown
	pushl	-1328(%ebp)
	call	_keywin_on
	addl	$32, %esp
	jmp	L72
L157:
	cmpl	$0, -1296(%ebp)
	je	L70
	cmpl	$0, -1328(%ebp)
	je	L70
	movl	-1328(%ebp), %eax
	movl	36(%eax), %esi
	testl	%esi, %esi
	je	L70
	cmpl	$0, 52(%esi)
	je	L70
	pushl	$LC1
	pushl	180(%esi)
	call	_cons_putstr0
	call	_io_cli
	leal	48(%esi), %eax
	movl	%eax, 84(%esi)
	movl	$_asm_end_app, 76(%esi)
	call	_io_sti
	pushl	$0
	pushl	$-1
	pushl	%esi
	call	_task_run
	addl	$20, %esp
	jmp	L70
L67:
	cmpl	$0, -1328(%ebp)
	je	L69
	pushl	-1328(%ebp)
	call	_keywin_off
	popl	%esi
L69:
	movl	-1252(%ebp), %edx
	movl	$0, -1328(%ebp)
	movl	-1244(%ebp,%edx,4), %eax
	pushl	16(%eax)
	pushl	12(%eax)
	pushl	-1244(%ebp,%ebx,4)
	call	_sheet_slide
	addl	$12, %esp
	jmp	L68
L156:
	andl	$-2, -1308(%ebp)
	jmp	L64
L155:
	orl	$1, -1308(%ebp)
	jmp	L63
L154:
	pushl	$237
	leal	-220(%ebp), %ebx
	pushl	%ebx
	xorl	$1, -1300(%ebp)
	call	_fifo32_put
	pushl	-1300(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L60
L153:
	pushl	$237
	leal	-220(%ebp), %ebx
	pushl	%ebx
	xorl	$2, -1300(%ebp)
	call	_fifo32_put
	pushl	-1300(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L59
L152:
	pushl	$237
	leal	-220(%ebp), %ebx
	pushl	%ebx
	xorl	$4, -1300(%ebp)
	call	_fifo32_put
	pushl	-1300(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L58
L151:
	andl	$-3, -1296(%ebp)
	jmp	L57
L150:
	andl	$-2, -1296(%ebp)
	jmp	L56
L149:
	orl	$2, -1296(%ebp)
	jmp	L55
L148:
	orl	$1, -1296(%ebp)
	jmp	L54
L147:
	cmpl	$0, -1328(%ebp)
	je	L52
	pushl	-1328(%ebp)
	call	_keywin_off
	popl	%eax
	movl	-1328(%ebp), %eax
	movl	24(%eax), %edi
	decl	%edi
	jne	L53
	movl	-1252(%ebp), %edx
	movl	-60(%ebp,%edx,4), %eax
	movl	16(%eax), %edi
	decl	%edi
L53:
	movl	-1252(%ebp), %edx
	movl	-60(%ebp,%edx,4), %eax
	movl	24(%eax,%edi,4), %edi
	pushl	%edi
	movl	%edi, -1328(%ebp)
	call	_keywin_on
	popl	%edi
	jmp	L52
L49:
	leal	32(%edx), %eax
	movb	%al, -156(%ebp)
	jmp	L47
L127:
	cmpl	$0, -1296(%ebp)
	je	L47
	jmp	L49
L44:
	movb	_keytable1.1-256(%ecx), %al
	jmp	L133
L43:
	movb	$0, -156(%ebp)
	jmp	L42
L146:
	movb	_keytable2.2+224, %al
	jmp	L133
L136:
	cmpl	$0, -1264(%ebp)
	jns	L161
	cmpl	$2147483647, -1272(%ebp)
	jne	L162
	pushl	-1284(%ebp)
	call	_task_sleep
	call	_io_sti
	jmp	L130
L162:
	call	_io_sti
	jmp	L132
L161:
	call	_io_sti
	movl	-1252(%ebp), %edx
	pushl	-1268(%ebp)
	pushl	-1264(%ebp)
	pushl	-1244(%ebp,%edx,4)
	call	_sheet_slide
	movl	$-1, -1264(%ebp)
	jmp	L131
L135:
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, -1304(%ebp)
	call	_wait_KBC_sendready
	pushl	-1304(%ebp)
	pushl	$96
	call	_io_out8
	addl	$12, %esp
	jmp	L30
L10:
	pushl	$145472
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$0
	pushl	$22841
	movl	%eax, %ebx
	pushl	$7
	pushl	%eax
	leal	-892(%ebp), %eax
	pushl	$2523136
	pushl	%eax
	call	_memmam_link_page_32_m
	xorl	%edx, %edx
	movl	$0, -1248(%ebp)
	addl	$32, %esp
L16:
	movb	_hankaku(%edx), %al
	movb	%al, (%edx,%ebx)
	movl	-1248(%ebp), %eax
	incl	%eax
	movl	%eax, -1248(%ebp)
	movl	%eax, %edx
	cmpl	$4095, %eax
	jle	L16
	movl	$4096, -1248(%ebp)
	movl	$4096, %eax
L21:
	movb	$-1, (%eax,%ebx)
	movl	-1248(%ebp), %eax
	incl	%eax
	movl	%eax, -1248(%ebp)
	cmpl	$145471, %eax
	jle	L21
	jmp	L11
L134:
	pushl	$-18874368
	call	_init_apic
	popl	%eax
	jmp	L3
	.balign 2
.globl _keywin_off
	.def	_keywin_off;	.scl	2;	.type	32;	.endef
_keywin_off:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	pushl	$0
	movl	8(%ebp), %ebx
	pushl	%ebx
	call	_change_wtitle8
	testb	$32, 28(%ebx)
	popl	%ecx
	popl	%eax
	jne	L165
L163:
	movl	-4(%ebp), %ebx
	leave
	ret
L165:
	pushl	$3
	movl	36(%ebx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%eax
	popl	%edx
	jmp	L163
	.balign 2
.globl _keywin_on
	.def	_keywin_on;	.scl	2;	.type	32;	.endef
_keywin_on:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	pushl	$1
	movl	8(%ebp), %ebx
	pushl	%ebx
	call	_change_wtitle8
	testb	$32, 28(%ebx)
	popl	%ecx
	popl	%eax
	jne	L168
L166:
	movl	-4(%ebp), %ebx
	leave
	ret
L168:
	pushl	$2
	movl	36(%ebx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%eax
	popl	%edx
	jmp	L166
	.balign 2
.globl _open_constask
	.def	_open_constask;	.scl	2;	.type	32;	.endef
_open_constask:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$16, %esp
	movl	2551808, %eax
	movl	%eax, -16(%ebp)
	call	_task_alloc
	movl	%eax, %esi
	call	_task_now
	pushl	$512
	pushl	$3932160
	movl	%eax, -20(%ebp)
	call	_memman_alloc_4k
	pushl	$0
	pushl	$1
	pushl	$7
	movl	%eax, -24(%ebp)
	pushl	%eax
	pushl	$2523136
	pushl	-16(%ebp)
	call	_memmam_link_page_32_m
	addl	$32, %esp
	pushl	$65536
	pushl	$3932160
	call	_memman_alloc_4k
	movl	%eax, 188(%esi)
	pushl	$0
	pushl	$16
	pushl	$7
	pushl	%eax
	pushl	-16(%ebp)
	call	_pageman_link_page_32_m
	movl	188(%esi), %eax
	addl	$65524, %eax
	movl	%eax, 100(%esi)
	movl	$_console_task, 76(%esi)
	movl	$8, 116(%esi)
	movl	$16, 120(%esi)
	movl	$8, 124(%esi)
	movl	$8, 128(%esi)
	movl	$8, 132(%esi)
	movl	$8, 136(%esi)
	movl	$8, 240(%esi)
	pushl	$4096
	pushl	$3932160
	call	_memman_alloc_4k
	addl	$36, %esp
	pushl	-16(%ebp)
	movl	%eax, %edi
	call	_memman_alloc_page_32
	movl	%eax, %ebx
	pushl	$1
	orl	$7, %ebx
	movl	%eax, -28(%ebp)
	pushl	%ebx
	pushl	%edi
	pushl	-16(%ebp)
	call	_pageman_link_page_32
	addl	$20, %esp
	movl	%ebx, 4092(%edi)
	movl	$3072, %edx
L174:
	movb	-4096(%edx), %al
	movb	%al, (%edx,%edi)
	incl	%edx
	cmpl	$4091, %edx
	jle	L174
	xorl	%edx, %edx
L179:
	movl	-4096(,%edx,4), %eax
	movl	%eax, (%edi,%edx,4)
	incl	%edx
	cmpl	$2, %edx
	jle	L179
	andl	$-4096, -28(%ebp)
	movl	-28(%ebp), %eax
	movl	%eax, 72(%esi)
	pushl	$32736
	pushl	$3932160
	call	_memman_alloc_4k
	movl	%eax, 260(%esi)
	pushl	$0
	pushl	$8
	pushl	$7
	pushl	%eax
	pushl	$2523136
	pushl	-16(%ebp)
	call	_memmam_link_page_32_m
	addl	$32, %esp
	pushl	260(%esi)
	call	_memman_init
	pushl	$-1073741825
	pushl	$12582912
	pushl	260(%esi)
	call	_memman_free
	movl	8(%ebp), %eax
	movl	100(%esi), %edx
	movl	%eax, 4(%edx)
	movl	100(%esi), %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%edx)
	pushl	%esi
	pushl	-20(%ebp)
	call	_add_child_task
	pushl	$2
	pushl	$2
	pushl	%esi
	call	_task_run
	leal	16(%esi), %eax
	addl	$36, %esp
	pushl	%esi
	pushl	-24(%ebp)
	pushl	$128
	pushl	%eax
	call	_fifo32_init
	leal	-12(%ebp), %esp
	popl	%ebx
	movl	%esi, %eax
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
LC3:
	.ascii "console\0"
	.text
	.balign 2
.globl _open_console
	.def	_open_console;	.scl	2;	.type	32;	.endef
_open_console:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	2551808, %edi
	pushl	8(%ebp)
	call	_sheet_alloc
	pushl	$42240
	pushl	$3932160
	movl	%eax, %ebx
	call	_memman_alloc_4k
	pushl	$0
	pushl	$11
	movl	%eax, %esi
	pushl	$7
	pushl	%eax
	pushl	$2523136
	pushl	%edi
	call	_memmam_link_page_32_m
	addl	$36, %esp
	pushl	$-1
	pushl	$165
	pushl	$256
	pushl	%esi
	pushl	%ebx
	call	_sheet_setbuf
	pushl	$0
	pushl	$LC3
	pushl	$165
	pushl	$256
	pushl	%esi
	call	_make_window8
	addl	$40, %esp
	pushl	$0
	pushl	$128
	pushl	$240
	pushl	$28
	pushl	$8
	pushl	%ebx
	call	_make_textbox8
	pushl	12(%ebp)
	pushl	%ebx
	call	_open_constask
	orl	$32, 28(%ebx)
	movl	%eax, 36(%ebx)
	leal	-12(%ebp), %esp
	movl	%ebx, %eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _close_constask
	.def	_close_constask;	.scl	2;	.type	32;	.endef
_close_constask:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%edi, %edi
	pushl	%ebx
	movl	$15, %esi
	movl	2551808, %ebx
	pushl	8(%ebp)
	call	_task_sleep
	popl	%eax
L190:
	movl	8(%ebp), %edx
	movl	188(%edx), %eax
	addl	%edi, %eax
	addl	$4096, %edi
	pushl	%eax
	pushl	$2523136
	pushl	%ebx
	call	_memman_unlink_page_32
	pushl	%eax
	pushl	%ebx
	call	_memman_free_page_32
	addl	$20, %esp
	decl	%esi
	jns	L190
	movl	8(%ebp), %eax
	pushl	$65536
	pushl	188(%eax)
	pushl	$3932160
	call	_memman_free_4k
	movl	8(%ebp), %edx
	addl	$12, %esp
	pushl	16(%edx)
	pushl	$2523136
	pushl	%ebx
	call	_memman_unlink_page_32
	pushl	%eax
	pushl	%ebx
	call	_memman_free_page_32
	movl	8(%ebp), %eax
	addl	$20, %esp
	pushl	$512
	pushl	16(%eax)
	pushl	$3932160
	call	_memman_free_4k
	movl	8(%ebp), %edx
	movl	$0, 4(%edx)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _close_console
	.def	_close_console;	.scl	2;	.type	32;	.endef
_close_console:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%edi, %edi
	pushl	%ebx
	movl	$10, %esi
	pushl	%eax
	pushl	%eax
	movl	8(%ebp), %ebx
	movl	2551808, %eax
	movl	%eax, -16(%ebp)
	movl	36(%ebx), %eax
	movl	%eax, -20(%ebp)
L205:
	movl	(%ebx), %eax
	addl	%edi, %eax
	addl	$4096, %edi
	pushl	%eax
	pushl	$2523136
	pushl	-16(%ebp)
	call	_memman_unlink_page_32
	pushl	%eax
	pushl	-16(%ebp)
	call	_memman_free_page_32
	addl	$20, %esp
	decl	%esi
	jns	L205
	pushl	$42240
	pushl	(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	pushl	%ebx
	call	_sheet_free
	movl	-20(%ebp), %eax
	movl	%eax, 8(%ebp)
	addl	$16, %esp
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_close_constask
	.balign 2
.globl _top_bar_task
	.def	_top_bar_task;	.scl	2;	.type	32;	.endef
_top_bar_task:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	call	_task_now
	movl	%eax, %esi
L209:
	leal	16(%esi), %ebx
	call	_io_cli
	pushl	%ebx
	call	_fifo32_status
	popl	%edx
	testl	%eax, %eax
	je	L215
	pushl	%ebx
	call	_fifo32_get
L214:
	call	_io_sti
	popl	%eax
	jmp	L209
L215:
	pushl	%esi
	call	_task_sleep
	jmp	L214
	.def	_memman_unlink_page_32;	.scl	2;	.type	32;	.endef
	.def	_make_textbox8;	.scl	2;	.type	32;	.endef
	.def	_make_window8;	.scl	2;	.type	32;	.endef
	.def	_add_child_task;	.scl	2;	.type	32;	.endef
	.def	_pageman_link_page_32;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_page_32;	.scl	2;	.type	32;	.endef
	.def	_console_task;	.scl	2;	.type	32;	.endef
	.def	_pageman_link_page_32_m;	.scl	2;	.type	32;	.endef
	.def	_task_now;	.scl	2;	.type	32;	.endef
	.def	_task_alloc;	.scl	2;	.type	32;	.endef
	.def	_change_wtitle8;	.scl	2;	.type	32;	.endef
	.def	_close_constask;	.scl	2;	.type	32;	.endef
	.def	_close_console;	.scl	2;	.type	32;	.endef
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_asm_end_app;	.scl	2;	.type	32;	.endef
	.def	_cons_putstr0;	.scl	2;	.type	32;	.endef
	.def	_sheet_refreshsub;	.scl	2;	.type	32;	.endef
	.def	_sheet_free;	.scl	2;	.type	32;	.endef
	.def	_keywin_off;	.scl	2;	.type	32;	.endef
	.def	_task_sleep;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_wait_KBC_sendready;	.scl	2;	.type	32;	.endef
	.def	_fifo32_get;	.scl	2;	.type	32;	.endef
	.def	_fifo32_status;	.scl	2;	.type	32;	.endef
	.def	_memman_free_4k;	.scl	2;	.type	32;	.endef
	.def	_memman_free_page_32;	.scl	2;	.type	32;	.endef
	.def	_file_loadfile2;	.scl	2;	.type	32;	.endef
	.def	_file_search;	.scl	2;	.type	32;	.endef
	.def	_file_readfat;	.scl	2;	.type	32;	.endef
	.def	_fifo32_put;	.scl	2;	.type	32;	.endef
	.def	_keywin_on;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_slide;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_open_console;	.scl	2;	.type	32;	.endef
	.def	_init_screen8;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_task_run;	.scl	2;	.type	32;	.endef
	.def	_task_init;	.scl	2;	.type	32;	.endef
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_init_pit;	.scl	2;	.type	32;	.endef
	.def	_fifo32_init;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_apic;	.scl	2;	.type	32;	.endef
	.def	_support_apic;	.scl	2;	.type	32;	.endef
	.def	_load_idtr;	.scl	2;	.type	32;	.endef
	.def	_load_gdtr;	.scl	2;	.type	32;	.endef
	.def	_store_cr0;	.scl	2;	.type	32;	.endef
	.def	_store_cr3;	.scl	2;	.type	32;	.endef
	.def	_load_cr0;	.scl	2;	.type	32;	.endef
	.def	_memmam_link_page_32_m;	.scl	2;	.type	32;	.endef
	.def	_init_page;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
