	.file	"bootpack.c"
	.data
_keytable0.0:
	.byte	0
	.byte	0
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	48
	.byte	45
	.byte	94
	.byte	8
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	64
	.byte	91
	.byte	10
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	59
	.byte	58
	.byte	0
	.byte	0
	.byte	93
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	44
	.byte	46
	.byte	47
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
_keytable1.1:
	.byte	0
	.byte	0
	.byte	33
	.byte	34
	.byte	35
	.byte	36
	.byte	37
	.byte	38
	.byte	39
	.byte	40
	.byte	41
	.byte	126
	.byte	61
	.byte	126
	.byte	8
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	96
	.byte	123
	.byte	10
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	43
	.byte	42
	.byte	0
	.byte	0
	.byte	125
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	60
	.byte	62
	.byte	63
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	95
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	124
	.byte	0
	.byte	0
LC0:
	.ascii "nihongo.fnt\0"
LC2:
	.ascii "\12Break(mouse) :\12\0"
LC1:
	.ascii "\12Break(key) :\12\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$1124, %esp
	movl	$-1, -1072(%ebp)
	movl	$0, -1076(%ebp)
	movl	$2147483647, -1080(%ebp)
	movl	$0, -1084(%ebp)
	movl	$0, -1100(%ebp)
	movb	4081, %al
	sarb	$4, %al
	movl	%eax, %edx
	andl	$7, %edx
	movl	%edx, -1104(%ebp)
	movl	$-1, -1108(%ebp)
	movl	$-1, -1112(%ebp)
	movl	$-1, -1116(%ebp)
	movl	$0, -1120(%ebp)
	movl	$0, -1124(%ebp)
	call	_init_gdtidt
	pushl	$3932160
	call	_memman_init
	pushl	$-1342177280
	pushl	$9437184
	pushl	$3932160
	call	_memman_free
	leal	-796(%ebp), %eax
	pushl	%eax
	call	_init_page
	leal	-796(%ebp), %edx
	pushl	$1
	pushl	$16
	pushl	$2555911
	pushl	$-1073741824
	pushl	$2523136
	pushl	%edx
	call	_memmam_link_page_32_m
	leal	-796(%ebp), %eax
	addl	$44, %esp
	pushl	$1
	pushl	$1
	pushl	$2551815
	pushl	$-1073610752
	pushl	$2523136
	pushl	%eax
	call	_memmam_link_page_32_m
	leal	-796(%ebp), %edx
	pushl	$1
	pushl	$128
	pushl	$2621447
	pushl	$-1072693248
	pushl	$2523136
	pushl	%edx
	call	_memmam_link_page_32_m
	leal	-796(%ebp), %eax
	addl	$48, %esp
	pushl	$1
	pushl	$2304
	pushl	$7
	pushl	$7
	pushl	$2523136
	pushl	%eax
	call	_memmam_link_page_32_m
	leal	-796(%ebp), %edx
	pushl	$1
	pushl	$131072
	pushl	$-536870905
	pushl	$-536870912
	pushl	$2523136
	pushl	%edx
	call	_memmam_link_page_32_m
	addl	$48, %esp
	leal	-796(%ebp), %eax
	movl	%eax, 2551808
	call	_load_cr0
	movl	%eax, %ebx
	pushl	$2523136
	orl	$-2147483648, %ebx
	call	_store_cr3
	pushl	%ebx
	call	_store_cr0
	pushl	$-1073741824
	pushl	$65535
	call	_load_gdtr
	pushl	$-1073608704
	pushl	$65535
	call	_load_idtr
	call	_support_apic
	addl	$24, %esp
	decl	%eax
	je	L111
	call	_init_pic
L3:
	leal	-92(%ebp), %ebx
	call	_io_sti
	pushl	$0
	leal	-636(%ebp), %eax
	pushl	%eax
	pushl	$128
	pushl	%ebx
	call	_fifo32_init
	movl	%ebx, 4076
	call	_init_pit
	pushl	$256
	pushl	%ebx
	call	_init_keyboard
	leal	-780(%ebp), %eax
	pushl	%eax
	pushl	$512
	pushl	%ebx
	call	_enable_mouse
	addl	$36, %esp
	call	_support_apic
	testl	%eax, %eax
	jne	L4
	pushl	$248
	pushl	$33
	call	_io_out8
	pushl	$239
	pushl	$161
	call	_io_out8
	addl	$16, %esp
L4:
	pushl	$0
	leal	-764(%ebp), %eax
	pushl	%eax
	leal	-124(%ebp), %edi
	pushl	$32
	pushl	%edi
	call	_fifo32_init
	call	_init_palette
	leal	-796(%ebp), %edx
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	pushl	%edx
	pushl	$3932160
	call	_shtctl_init
	addl	$36, %esp
	pushl	$3932160
	movl	%eax, -1060(%ebp)
	call	_task_init
	pushl	$2
	pushl	$1
	pushl	%eax
	movl	%eax, -1096(%ebp)
	movl	%eax, -68(%ebp)
	call	_task_run
	movl	-1096(%ebp), %edx
	movl	-1060(%ebp), %eax
	movl	%eax, 4068
	movb	$0, 204(%edx)
	pushl	%eax
	call	_sheet_alloc
	movl	%eax, %esi
	movswl	4086,%edx
	movswl	4084,%eax
	imull	%edx, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$0
	movswl	4086,%edx
	movl	%eax, %ebx
	movswl	4084,%eax
	imull	%edx, %eax
	addl	$4095, %eax
	sarl	$12, %eax
	pushl	%eax
	leal	-796(%ebp), %eax
	pushl	$7
	pushl	%ebx
	pushl	$2523136
	pushl	%eax
	call	_memmam_link_page_32_m
	addl	$52, %esp
	pushl	$-1
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	%ebx
	pushl	%esi
	call	_sheet_setbuf
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	%ebx
	leal	-1052(%ebp), %ebx
	call	_init_screen8
	addl	$32, %esp
	pushl	-1088(%ebp)
	pushl	-1060(%ebp)
	call	_open_console
	pushl	-1060(%ebp)
	movl	%eax, -1128(%ebp)
	call	_sheet_alloc
	pushl	$99
	pushl	$16
	movl	%eax, -1092(%ebp)
	pushl	$16
	pushl	%ebx
	pushl	%eax
	call	_sheet_setbuf
	addl	$32, %esp
	pushl	$99
	pushl	%ebx
	movl	$2, %ebx
	call	_init_mouse_cursor8
	movswl	4084,%eax
	leal	-16(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	movl	%eax, -1064(%ebp)
	movswl	4086,%eax
	pushl	$0
	leal	-44(%eax), %ecx
	pushl	$0
	movl	%ecx, %eax
	pushl	%esi
	cltd
	idivl	%ebx
	movl	%eax, -1068(%ebp)
	call	_sheet_slide
	pushl	$4
	pushl	$32
	pushl	-1128(%ebp)
	call	_sheet_slide
	addl	$32, %esp
	pushl	-1068(%ebp)
	pushl	-1064(%ebp)
	pushl	-1092(%ebp)
	call	_sheet_slide
	pushl	$0
	pushl	%esi
	call	_sheet_updown
	pushl	$1
	pushl	-1128(%ebp)
	call	_sheet_updown
	pushl	$2
	pushl	-1092(%ebp)
	call	_sheet_updown
	addl	$36, %esp
	pushl	-1128(%ebp)
	call	_keywin_on
	pushl	$237
	pushl	%edi
	call	_fifo32_put
	pushl	-1104(%ebp)
	pushl	%edi
	call	_fifo32_put
	pushl	$11520
	pushl	$3932160
	call	_memman_alloc_4k
	leal	-796(%ebp), %edx
	pushl	$0
	movl	%eax, %esi
	pushl	$3
	pushl	$7
	pushl	%eax
	pushl	$2523136
	pushl	%edx
	call	_memmam_link_page_32_m
	addl	$52, %esp
	pushl	$1049088
	pushl	%esi
	call	_file_readfat
	pushl	$224
	pushl	$1058304
	pushl	$LC0
	call	_file_search
	addl	$20, %esp
	movl	%eax, %edx
	testl	%eax, %eax
	je	L5
	movl	28(%eax), %eax
	pushl	%esi
	movl	%eax, -1056(%ebp)
	leal	-1056(%ebp), %eax
	pushl	%eax
	movzwl	26(%edx), %eax
	pushl	%eax
	call	_file_loadfile2
	addl	$12, %esp
	movl	%eax, %ebx
L6:
	movl	%ebx, 4072
	xorl	%eax, %eax
	movl	$0, -1056(%ebp)
L21:
	sall	$12, %eax
	leal	-796(%ebp), %edx
	leal	(%eax,%esi), %eax
	pushl	%eax
	pushl	$2523136
	pushl	%edx
	call	_memman_unlink_page_32
	pushl	%eax
	leal	-796(%ebp), %eax
	pushl	%eax
	call	_memman_free_page_32
	movl	-1056(%ebp), %eax
	incl	%eax
	addl	$20, %esp
	movl	%eax, -1056(%ebp)
	cmpl	$2, %eax
	jle	L21
	pushl	$11520
	pushl	%esi
	pushl	$3932160
	call	_memman_free_4k
L107:
	addl	$12, %esp
L22:
	leal	-124(%ebp), %ebx
	pushl	%ebx
	call	_fifo32_status
	popl	%edi
	testl	%eax, %eax
	jle	L25
	cmpl	$0, -1108(%ebp)
	js	L112
L25:
	leal	-92(%ebp), %ebx
	call	_io_cli
	pushl	%ebx
	call	_fifo32_status
	popl	%esi
	testl	%eax, %eax
	je	L113
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, -1056(%ebp)
	call	_io_sti
	popl	%ebx
	cmpl	$0, -1128(%ebp)
	je	L32
	movl	-1128(%ebp), %eax
	cmpl	$0, 28(%eax)
	jne	L32
	movl	-1060(%ebp), %edx
	movl	$0, -1128(%ebp)
	movl	16(%edx), %eax
	cmpl	$1, %eax
	je	L32
	movl	-1060(%ebp), %edx
	movl	16(%edx,%eax,4), %eax
	pushl	%eax
	movl	%eax, -1128(%ebp)
	call	_keywin_on
	popl	%ecx
L32:
	movl	-1056(%ebp), %edx
	leal	-256(%edx), %eax
	cmpl	$255, %eax
	jbe	L114
	leal	-512(%edx), %eax
	cmpl	$255, %eax
	jbe	L115
	leal	-768(%edx), %eax
	cmpl	$255, %eax
	jbe	L116
	leal	-1024(%edx), %eax
	cmpl	$999, %eax
	jbe	L117
	leal	-2024(%edx), %eax
	cmpl	$255, %eax
	ja	L22
	imull	$40, %edx, %eax
	movl	-1060(%ebp), %edx
	movl	$0, -1056(%ebp)
	leal	-79916(%eax,%edx), %ebx
	xorl	%eax, %eax
L95:
	sall	$12, %eax
	addl	(%ebx), %eax
	pushl	%eax
	leal	-796(%ebp), %eax
	pushl	$2523136
	pushl	%eax
	call	_memman_unlink_page_32
	leal	-796(%ebp), %edx
	pushl	%eax
	pushl	%edx
	call	_memman_free_page_32
	movl	-1056(%ebp), %eax
	incl	%eax
	addl	$20, %esp
	movl	%eax, -1056(%ebp)
	cmpl	$10, %eax
	jle	L95
	pushl	$42240
	pushl	(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	pushl	%ebx
	call	_sheet_free
	addl	$16, %esp
	jmp	L22
L117:
	imull	$208, %edx, %edx
	addl	_taskctl, %edx
	leal	-208904(%edx), %eax
	pushl	%eax
	call	_close_constask
L106:
	popl	%eax
	jmp	L22
L116:
	imull	$40, %edx, %eax
	movl	-1060(%ebp), %edx
	leal	-29676(%eax,%edx), %eax
	pushl	%eax
	call	_close_console
	jmp	L106
L115:
	movzbl	-1056(%ebp), %eax
	pushl	%eax
	leal	-780(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	popl	%edx
	popl	%ecx
	testl	%eax, %eax
	je	L22
	movl	-772(%ebp), %eax
	movl	-776(%ebp), %edx
	addl	%eax, -1068(%ebp)
	addl	%edx, -1064(%ebp)
	js	L118
L64:
	cmpl	$0, -1068(%ebp)
	js	L119
L65:
	movswl	4084,%eax
	decl	%eax
	cmpl	%eax, -1064(%ebp)
	jle	L66
	movl	%eax, -1064(%ebp)
L66:
	movswl	4086,%eax
	decl	%eax
	cmpl	%eax, -1068(%ebp)
	jle	L67
	movl	%eax, -1068(%ebp)
L67:
	movl	-1064(%ebp), %eax
	movl	-1068(%ebp), %edx
	movl	%eax, -1072(%ebp)
	movl	%edx, -1076(%ebp)
	testl	$1, -768(%ebp)
	jne	L120
	movl	$-1, -1112(%ebp)
	cmpl	$2147483647, -1080(%ebp)
	je	L22
L108:
	pushl	-1084(%ebp)
	pushl	-1080(%ebp)
	pushl	-1124(%ebp)
	call	_sheet_slide
	movl	$2147483647, -1080(%ebp)
	jmp	L107
L120:
	cmpl	$0, -1112(%ebp)
	js	L121
	movl	-1064(%ebp), %esi
	movl	-1120(%ebp), %eax
	subl	-1112(%ebp), %esi
	movl	-1068(%ebp), %edi
	subl	-1116(%ebp), %edi
	movl	-1068(%ebp), %edx
	leal	2(%esi,%eax), %esi
	movl	%edx, -1116(%ebp)
	movl	%esi, -1080(%ebp)
	addl	%edi, -1084(%ebp)
	andl	$-4, -1080(%ebp)
	jmp	L22
L121:
	movl	-1060(%ebp), %eax
	movl	16(%eax), %ecx
	leal	-1(%ecx), %ebx
L110:
	testl	%ebx, %ebx
	jle	L22
	movl	-1060(%ebp), %edx
	movl	-1068(%ebp), %edi
	movl	-1064(%ebp), %esi
	movl	20(%edx,%ebx,4), %edx
	movl	%edx, -1124(%ebp)
	subl	16(%edx), %edi
	subl	12(%edx), %esi
	js	L72
	movl	4(%edx), %eax
	cmpl	%eax, %esi
	jge	L72
	testl	%edi, %edi
	js	L72
	cmpl	8(%edx), %edi
	jge	L72
	imull	%edi, %eax
	movl	%eax, -1136(%ebp)
	movl	(%edx), %edx
	movl	-1136(%ebp), %eax
	addl	%esi, %eax
	movzbl	(%eax,%edx), %eax
	movl	-1124(%ebp), %edx
	cmpl	20(%edx), %eax
	jne	L122
L72:
	decl	%ebx
	jmp	L110
L122:
	leal	-1(%ecx), %eax
	pushl	%eax
	pushl	%edx
	call	_sheet_updown
	popl	%ebx
	popl	%eax
	movl	-1128(%ebp), %eax
	cmpl	%eax, -1124(%ebp)
	je	L76
	pushl	%eax
	call	_keywin_off
	movl	-1124(%ebp), %edx
	pushl	%edx
	movl	%edx, -1128(%ebp)
	call	_keywin_on
	popl	%edx
	popl	%ecx
L76:
	cmpl	$2, %esi
	jle	L77
	movl	-1124(%ebp), %edx
	movl	4(%edx), %eax
	subl	$3, %eax
	cmpl	%eax, %esi
	jge	L77
	cmpl	$2, %edi
	jle	L77
	cmpl	$20, %edi
	jg	L77
	movl	-1064(%ebp), %eax
	movl	-1068(%ebp), %edx
	movl	%eax, -1112(%ebp)
	movl	%edx, -1116(%ebp)
	movl	-1124(%ebp), %eax
	movl	-1124(%ebp), %edx
	movl	12(%eax), %eax
	movl	16(%edx), %edx
	movl	%eax, -1120(%ebp)
	movl	%edx, -1084(%ebp)
L77:
	movl	-1124(%ebp), %eax
	movl	4(%eax), %edx
	leal	-21(%edx), %eax
	cmpl	%esi, %eax
	jg	L22
	leal	-5(%edx), %eax
	cmpl	%eax, %esi
	jge	L22
	cmpl	$4, %edi
	jle	L22
	cmpl	$18, %edi
	jg	L22
	movl	-1124(%ebp), %edx
	testb	$16, 28(%edx)
	je	L123
	movl	-1124(%ebp), %edx
	movl	36(%edx), %ebx
	pushl	$LC2
	pushl	180(%ebx)
	call	_cons_putstr0
	call	_io_cli
	leal	48(%ebx), %eax
	movl	%eax, 84(%ebx)
	movl	$_asm_end_app, 76(%ebx)
	call	_io_sti
	pushl	$0
	pushl	$-1
	pushl	%ebx
	call	_task_run
	addl	$20, %esp
	jmp	L22
L123:
	movl	36(%edx), %ebx
	pushl	$-1
	pushl	%edx
	call	_sheet_updown
	pushl	-1128(%ebp)
	call	_keywin_off
	movl	-1060(%ebp), %edx
	movl	16(%edx), %eax
	movl	16(%edx,%eax,4), %eax
	pushl	%eax
	movl	%eax, -1128(%ebp)
	call	_keywin_on
	call	_io_cli
	leal	16(%ebx), %eax
	pushl	$4
	pushl	%eax
	call	_fifo32_put
	call	_io_sti
	addl	$24, %esp
	jmp	L22
L119:
	movl	$0, -1068(%ebp)
	jmp	L65
L118:
	movl	$0, -1064(%ebp)
	jmp	L64
L114:
	cmpl	$383, %edx
	jg	L36
	cmpl	$0, -1100(%ebp)
	jne	L37
	movb	_keytable0.0-256(%edx), %al
L109:
	movb	%al, -60(%ebp)
L39:
	movb	-60(%ebp), %dl
	leal	-65(%edx), %eax
	cmpb	$25, %al
	ja	L40
	testl	$4, -1104(%ebp)
	jne	L104
	cmpl	$0, -1100(%ebp)
	je	L42
L40:
	movb	-60(%ebp), %al
	testb	%al, %al
	je	L44
	cmpl	$0, -1128(%ebp)
	je	L44
	movsbl	%al,%eax
	movl	-1128(%ebp), %edx
	addl	$256, %eax
	pushl	%eax
	movl	36(%edx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%eax
	popl	%edx
L44:
	cmpl	$271, -1056(%ebp)
	je	L124
L45:
	movl	-1056(%ebp), %eax
	cmpl	$298, %eax
	je	L125
L47:
	cmpl	$310, %eax
	je	L126
L48:
	cmpl	$426, %eax
	je	L127
L49:
	cmpl	$438, %eax
	je	L128
L50:
	cmpl	$314, %eax
	je	L129
L51:
	cmpl	$325, -1056(%ebp)
	je	L130
L52:
	cmpl	$326, -1056(%ebp)
	je	L131
L53:
	cmpl	$315, -1056(%ebp)
	je	L132
L54:
	cmpl	$316, -1056(%ebp)
	je	L133
L56:
	cmpl	$343, -1056(%ebp)
	je	L134
L58:
	movl	-1056(%ebp), %eax
	cmpl	$506, %eax
	je	L135
L59:
	cmpl	$510, %eax
	jne	L22
	call	_wait_KBC_sendready
	pushl	-1108(%ebp)
	pushl	$96
	call	_io_out8
	popl	%ebx
	popl	%esi
	jmp	L22
L135:
	movl	$-1, -1108(%ebp)
	jmp	L59
L134:
	movl	-1060(%ebp), %edx
	movl	16(%edx), %eax
	decl	%eax
	pushl	%eax
	pushl	24(%edx)
	call	_sheet_updown
	popl	%edi
	popl	%eax
	jmp	L58
L133:
	cmpl	$0, -1100(%ebp)
	je	L56
	cmpl	$0, -1128(%ebp)
	je	L57
	pushl	-1128(%ebp)
	call	_keywin_off
	popl	%eax
L57:
	pushl	-1088(%ebp)
	pushl	-1060(%ebp)
	call	_open_console
	pushl	$4
	pushl	$32
	pushl	%eax
	movl	%eax, -1128(%ebp)
	call	_sheet_slide
	movl	-1060(%ebp), %eax
	pushl	16(%eax)
	pushl	-1128(%ebp)
	call	_sheet_updown
	pushl	-1128(%ebp)
	call	_keywin_on
	addl	$32, %esp
	jmp	L56
L132:
	cmpl	$0, -1100(%ebp)
	je	L54
	cmpl	$0, -1128(%ebp)
	je	L54
	movl	-1128(%ebp), %edx
	movl	36(%edx), %ebx
	testl	%ebx, %ebx
	je	L54
	cmpl	$0, 52(%ebx)
	je	L54
	pushl	$LC1
	pushl	180(%ebx)
	call	_cons_putstr0
	call	_io_cli
	leal	48(%ebx), %eax
	movl	%eax, 84(%ebx)
	movl	$_asm_end_app, 76(%ebx)
	call	_io_sti
	pushl	$0
	pushl	$-1
	pushl	%ebx
	call	_task_run
	addl	$20, %esp
	jmp	L54
L131:
	pushl	$237
	leal	-124(%ebp), %ebx
	pushl	%ebx
	xorl	$1, -1104(%ebp)
	call	_fifo32_put
	pushl	-1104(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L53
L130:
	pushl	$237
	leal	-124(%ebp), %ebx
	pushl	%ebx
	xorl	$2, -1104(%ebp)
	call	_fifo32_put
	pushl	-1104(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L52
L129:
	pushl	$237
	leal	-124(%ebp), %ebx
	pushl	%ebx
	xorl	$4, -1104(%ebp)
	call	_fifo32_put
	pushl	-1104(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L51
L128:
	andl	$-3, -1100(%ebp)
	jmp	L50
L127:
	andl	$-2, -1100(%ebp)
	jmp	L49
L126:
	orl	$2, -1100(%ebp)
	jmp	L48
L125:
	orl	$1, -1100(%ebp)
	jmp	L47
L124:
	cmpl	$0, -1128(%ebp)
	je	L45
	pushl	-1128(%ebp)
	call	_keywin_off
	popl	%eax
	movl	-1128(%ebp), %eax
	movl	24(%eax), %ebx
	decl	%ebx
	jne	L46
	movl	-1060(%ebp), %edx
	movl	16(%edx), %ebx
	decl	%ebx
L46:
	movl	-1060(%ebp), %eax
	movl	20(%eax,%ebx,4), %ebx
	pushl	%ebx
	movl	%ebx, -1128(%ebp)
	call	_keywin_on
	popl	%eax
	jmp	L45
L42:
	leal	32(%edx), %eax
	movb	%al, -60(%ebp)
	jmp	L40
L104:
	cmpl	$0, -1100(%ebp)
	je	L40
	jmp	L42
L37:
	movb	_keytable1.1-256(%edx), %al
	jmp	L109
L36:
	movb	$0, -60(%ebp)
	jmp	L39
L113:
	cmpl	$0, -1072(%ebp)
	jns	L136
	cmpl	$2147483647, -1080(%ebp)
	jne	L137
	pushl	-1096(%ebp)
	call	_task_sleep
	call	_io_sti
	jmp	L106
L137:
	call	_io_sti
	jmp	L108
L136:
	call	_io_sti
	pushl	-1076(%ebp)
	pushl	-1072(%ebp)
	pushl	-1092(%ebp)
	call	_sheet_slide
	movl	$-1, -1072(%ebp)
	jmp	L107
L112:
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, -1108(%ebp)
	call	_wait_KBC_sendready
	pushl	-1108(%ebp)
	pushl	$96
	call	_io_out8
	addl	$12, %esp
	jmp	L25
L5:
	pushl	$145472
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$0
	pushl	$22841
	movl	%eax, %ebx
	pushl	$7
	pushl	%eax
	leal	-796(%ebp), %eax
	pushl	$2523136
	pushl	%eax
	call	_memmam_link_page_32_m
	xorl	%edx, %edx
	movl	$0, -1056(%ebp)
	addl	$32, %esp
L11:
	movb	_hankaku(%edx), %al
	movb	%al, (%edx,%ebx)
	movl	-1056(%ebp), %eax
	incl	%eax
	movl	%eax, -1056(%ebp)
	movl	%eax, %edx
	cmpl	$4095, %eax
	jle	L11
	movl	$4096, -1056(%ebp)
	movl	$4096, %eax
L16:
	movb	$-1, (%eax,%ebx)
	movl	-1056(%ebp), %eax
	incl	%eax
	movl	%eax, -1056(%ebp)
	cmpl	$145471, %eax
	jle	L16
	jmp	L6
L111:
	pushl	$-18874368
	call	_init_apic
	popl	%eax
	jmp	L3
	.balign 2
.globl _keywin_off
	.def	_keywin_off;	.scl	2;	.type	32;	.endef
_keywin_off:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	pushl	$0
	movl	8(%ebp), %ebx
	pushl	%ebx
	call	_change_wtitle8
	testb	$32, 28(%ebx)
	popl	%ecx
	popl	%eax
	jne	L140
L138:
	movl	-4(%ebp), %ebx
	leave
	ret
L140:
	pushl	$3
	movl	36(%ebx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%eax
	popl	%edx
	jmp	L138
	.balign 2
.globl _keywin_on
	.def	_keywin_on;	.scl	2;	.type	32;	.endef
_keywin_on:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	pushl	$1
	movl	8(%ebp), %ebx
	pushl	%ebx
	call	_change_wtitle8
	testb	$32, 28(%ebx)
	popl	%ecx
	popl	%eax
	jne	L143
L141:
	movl	-4(%ebp), %ebx
	leave
	ret
L143:
	pushl	$2
	movl	36(%ebx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%eax
	popl	%edx
	jmp	L141
	.balign 2
.globl _open_constask
	.def	_open_constask;	.scl	2;	.type	32;	.endef
_open_constask:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	2551808, %esi
	call	_task_alloc
	pushl	$512
	movl	%eax, %ebx
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$0
	pushl	$1
	movl	%eax, %edi
	pushl	$7
	pushl	%eax
	pushl	$2523136
	pushl	%esi
	call	_memmam_link_page_32_m
	addl	$32, %esp
	pushl	$65536
	pushl	$3932160
	call	_memman_alloc_4k
	movl	%eax, 188(%ebx)
	pushl	$0
	pushl	$16
	pushl	$7
	pushl	188(%ebx)
	pushl	$2523136
	pushl	%esi
	call	_memmam_link_page_32_m
	addl	$32, %esp
	movl	188(%ebx), %edx
	movl	8(%ebp), %eax
	addl	$65524, %edx
	movl	%edx, 100(%ebx)
	movl	$_console_task, 76(%ebx)
	movl	$8, 116(%ebx)
	movl	$16, 120(%ebx)
	movl	$8, 124(%ebx)
	movl	$8, 128(%ebx)
	movl	$8, 132(%ebx)
	movl	$8, 136(%ebx)
	movl	%eax, 4(%edx)
	movl	100(%ebx), %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%edx)
	pushl	$2
	pushl	$2
	pushl	%ebx
	call	_task_run
	leal	16(%ebx), %eax
	pushl	%ebx
	pushl	%edi
	pushl	$128
	pushl	%eax
	call	_fifo32_init
	leal	-12(%ebp), %esp
	movl	%ebx, %eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.data
LC3:
	.ascii "console\0"
	.text
	.balign 2
.globl _open_console
	.def	_open_console;	.scl	2;	.type	32;	.endef
_open_console:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	2551808, %edi
	pushl	8(%ebp)
	call	_sheet_alloc
	pushl	$42240
	pushl	$3932160
	movl	%eax, %ebx
	call	_memman_alloc_4k
	pushl	$0
	pushl	$11
	movl	%eax, %esi
	pushl	$7
	pushl	%eax
	pushl	$2523136
	pushl	%edi
	call	_memmam_link_page_32_m
	addl	$36, %esp
	pushl	$-1
	pushl	$165
	pushl	$256
	pushl	%esi
	pushl	%ebx
	call	_sheet_setbuf
	pushl	$0
	pushl	$LC3
	pushl	$165
	pushl	$256
	pushl	%esi
	call	_make_window8
	addl	$40, %esp
	pushl	$0
	pushl	$128
	pushl	$240
	pushl	$28
	pushl	$8
	pushl	%ebx
	call	_make_textbox8
	pushl	12(%ebp)
	pushl	%ebx
	call	_open_constask
	orl	$32, 28(%ebx)
	movl	%eax, 36(%ebx)
	leal	-12(%ebp), %esp
	movl	%ebx, %eax
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _close_constask
	.def	_close_constask;	.scl	2;	.type	32;	.endef
_close_constask:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%edi, %edi
	pushl	%ebx
	movl	$15, %esi
	movl	2551808, %ebx
	pushl	8(%ebp)
	call	_task_sleep
	popl	%eax
L151:
	movl	8(%ebp), %edx
	movl	188(%edx), %eax
	addl	%edi, %eax
	addl	$4096, %edi
	pushl	%eax
	pushl	$2523136
	pushl	%ebx
	call	_memman_unlink_page_32
	pushl	%eax
	pushl	%ebx
	call	_memman_free_page_32
	addl	$20, %esp
	decl	%esi
	jns	L151
	movl	8(%ebp), %eax
	pushl	$65536
	pushl	188(%eax)
	pushl	$3932160
	call	_memman_free_4k
	movl	8(%ebp), %edx
	addl	$12, %esp
	pushl	16(%edx)
	pushl	$2523136
	pushl	%ebx
	call	_memman_unlink_page_32
	pushl	%eax
	pushl	%ebx
	call	_memman_free_page_32
	movl	8(%ebp), %eax
	addl	$20, %esp
	pushl	$512
	pushl	16(%eax)
	pushl	$3932160
	call	_memman_free_4k
	movl	8(%ebp), %edx
	movl	$0, 4(%edx)
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
	.balign 2
.globl _close_console
	.def	_close_console;	.scl	2;	.type	32;	.endef
_close_console:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	xorl	%edi, %edi
	pushl	%ebx
	movl	$10, %esi
	pushl	%eax
	pushl	%eax
	movl	8(%ebp), %ebx
	movl	2551808, %eax
	movl	%eax, -16(%ebp)
	movl	36(%ebx), %eax
	movl	%eax, -20(%ebp)
L166:
	movl	(%ebx), %eax
	addl	%edi, %eax
	addl	$4096, %edi
	pushl	%eax
	pushl	$2523136
	pushl	-16(%ebp)
	call	_memman_unlink_page_32
	pushl	%eax
	pushl	-16(%ebp)
	call	_memman_free_page_32
	addl	$20, %esp
	decl	%esi
	jns	L166
	pushl	$42240
	pushl	(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	pushl	%ebx
	call	_sheet_free
	movl	-20(%ebp), %eax
	movl	%eax, 8(%ebp)
	addl	$16, %esp
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	jmp	_close_constask
	.def	_memman_unlink_page_32;	.scl	2;	.type	32;	.endef
	.def	_make_textbox8;	.scl	2;	.type	32;	.endef
	.def	_make_window8;	.scl	2;	.type	32;	.endef
	.def	_console_task;	.scl	2;	.type	32;	.endef
	.def	_task_alloc;	.scl	2;	.type	32;	.endef
	.def	_change_wtitle8;	.scl	2;	.type	32;	.endef
	.def	_sheet_free;	.scl	2;	.type	32;	.endef
	.def	_close_constask;	.scl	2;	.type	32;	.endef
	.def	_close_console;	.scl	2;	.type	32;	.endef
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_asm_end_app;	.scl	2;	.type	32;	.endef
	.def	_cons_putstr0;	.scl	2;	.type	32;	.endef
	.def	_keywin_off;	.scl	2;	.type	32;	.endef
	.def	_task_sleep;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_wait_KBC_sendready;	.scl	2;	.type	32;	.endef
	.def	_fifo32_get;	.scl	2;	.type	32;	.endef
	.def	_fifo32_status;	.scl	2;	.type	32;	.endef
	.def	_memman_free_4k;	.scl	2;	.type	32;	.endef
	.def	_memman_free_page_32;	.scl	2;	.type	32;	.endef
	.def	_file_loadfile2;	.scl	2;	.type	32;	.endef
	.def	_file_search;	.scl	2;	.type	32;	.endef
	.def	_file_readfat;	.scl	2;	.type	32;	.endef
	.def	_fifo32_put;	.scl	2;	.type	32;	.endef
	.def	_keywin_on;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_slide;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_open_console;	.scl	2;	.type	32;	.endef
	.def	_init_screen8;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_task_run;	.scl	2;	.type	32;	.endef
	.def	_task_init;	.scl	2;	.type	32;	.endef
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_init_pit;	.scl	2;	.type	32;	.endef
	.def	_fifo32_init;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_apic;	.scl	2;	.type	32;	.endef
	.def	_support_apic;	.scl	2;	.type	32;	.endef
	.def	_load_idtr;	.scl	2;	.type	32;	.endef
	.def	_load_gdtr;	.scl	2;	.type	32;	.endef
	.def	_store_cr0;	.scl	2;	.type	32;	.endef
	.def	_store_cr3;	.scl	2;	.type	32;	.endef
	.def	_load_cr0;	.scl	2;	.type	32;	.endef
	.def	_memmam_link_page_32_m;	.scl	2;	.type	32;	.endef
	.def	_init_page;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
