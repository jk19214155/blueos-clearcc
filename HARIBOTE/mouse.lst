     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_io_in8
     7 00000000                                 	EXTERN	_fifo32_put
     8 00000000                                 	EXTERN	_wait_KBC_sendready
     9 00000000                                 	EXTERN	_io_out8
    10 00000000                                 [FILE "mouse.c"]
    11                                          [SECTION .text]
    12 00000000                                 	GLOBAL	_inthandler2c
    13 00000000                                 _inthandler2c:
    14 00000000 55                              	PUSH	EBP
    15 00000001 89 E5                           	MOV	EBP,ESP
    16 00000003 C7 05 FEC00040 00000000         	MOV	DWORD [-20971456],0
    17 0000000D C7 05 FEE000B0 00000000         	MOV	DWORD [-18874192],0
    18 00000017 6A 60                           	PUSH	96
    19 00000019 E8 [00000000]                   	CALL	_io_in8
    20 0000001E 03 05 [00000004]                	ADD	EAX,DWORD [_mousedata0]
    21 00000024 50                              	PUSH	EAX
    22 00000025 FF 35 [00000000]                	PUSH	DWORD [_mousefifo]
    23 0000002B E8 [00000000]                   	CALL	_fifo32_put
    24 00000030 C9                              	LEAVE
    25 00000031 C3                              	RET
    26 00000032                                 	GLOBAL	_enable_mouse
    27 00000032                                 _enable_mouse:
    28 00000032 55                              	PUSH	EBP
    29 00000033 89 E5                           	MOV	EBP,ESP
    30 00000035 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
    31 00000038 A3 [00000000]                   	MOV	DWORD [_mousefifo],EAX
    32 0000003D 8B 45 0C                        	MOV	EAX,DWORD [12+EBP]
    33 00000040 A3 [00000004]                   	MOV	DWORD [_mousedata0],EAX
    34 00000045 E8 [00000000]                   	CALL	_wait_KBC_sendready
    35 0000004A 68 000000D4                     	PUSH	212
    36 0000004F 6A 64                           	PUSH	100
    37 00000051 E8 [00000000]                   	CALL	_io_out8
    38 00000056 E8 [00000000]                   	CALL	_wait_KBC_sendready
    39 0000005B 68 000000E8                     	PUSH	232
    40 00000060 6A 60                           	PUSH	96
    41 00000062 E8 [00000000]                   	CALL	_io_out8
    42 00000067 E8 [00000000]                   	CALL	_wait_KBC_sendready
    43 0000006C 68 000000D4                     	PUSH	212
    44 00000071 6A 64                           	PUSH	100
    45 00000073 E8 [00000000]                   	CALL	_io_out8
    46 00000078 E8 [00000000]                   	CALL	_wait_KBC_sendready
    47 0000007D 68 000000F4                     	PUSH	244
    48 00000082 6A 60                           	PUSH	96
    49 00000084 E8 [00000000]                   	CALL	_io_out8
    50 00000089 8B 45 10                        	MOV	EAX,DWORD [16+EBP]
    51 0000008C C6 40 04 00                     	MOV	BYTE [4+EAX],0
    52 00000090 C9                              	LEAVE
    53 00000091 C3                              	RET
    54 00000092                                 	GLOBAL	_mouse_decode
    55 00000092                                 _mouse_decode:
    56 00000092 55                              	PUSH	EBP
    57 00000093 89 E5                           	MOV	EBP,ESP
    58 00000095 56                              	PUSH	ESI
    59 00000096 53                              	PUSH	EBX
    60 00000097 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
    61 0000009A 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
    62 0000009D 89 CE                           	MOV	ESI,ECX
    63 0000009F 8A 42 04                        	MOV	AL,BYTE [4+EDX]
    64 000000A2 84 C0                           	TEST	AL,AL
    65 000000A4 75 11                           	JNE	L4
    66 000000A6 80 F9 FA                        	CMP	CL,-6
    67 000000A9 74 06                           	JE	L13
    68 000000AB                                 L12:
    69 000000AB 31 C0                           	XOR	EAX,EAX
    70 000000AD                                 L3:
    71 000000AD 5B                              	POP	EBX
    72 000000AE 5E                              	POP	ESI
    73 000000AF 5D                              	POP	EBP
    74 000000B0 C3                              	RET
    75 000000B1                                 L13:
    76 000000B1 C6 42 04 01                     	MOV	BYTE [4+EDX],1
    77 000000B5 EB F4                           	JMP	L12
    78 000000B7                                 L4:
    79 000000B7 3C 01                           	CMP	AL,1
    80 000000B9 74 61                           	JE	L14
    81 000000BB 3C 02                           	CMP	AL,2
    82 000000BD 74 54                           	JE	L15
    83 000000BF 3C 03                           	CMP	AL,3
    84 000000C1 74 05                           	JE	L16
    85 000000C3 83 C8 FF                        	OR	EAX,-1
    86 000000C6 EB E5                           	JMP	L3
    87 000000C8                                 L16:
    88 000000C8 8A 1A                           	MOV	BL,BYTE [EDX]
    89 000000CA 81 E6 000000FF                  	AND	ESI,255
    90 000000D0 89 D8                           	MOV	EAX,EBX
    91 000000D2 88 4A 02                        	MOV	BYTE [2+EDX],CL
    92 000000D5 83 E0 07                        	AND	EAX,7
    93 000000D8 89 72 09                        	MOV	DWORD [9+EDX],ESI
    94 000000DB 89 42 0D                        	MOV	DWORD [13+EDX],EAX
    95 000000DE 88 D8                           	MOV	AL,BL
    96 000000E0 0F B6 4A 01                     	MOVZX	ECX,BYTE [1+EDX]
    97 000000E4 83 E0 10                        	AND	EAX,16
    98 000000E7 89 4A 05                        	MOV	DWORD [5+EDX],ECX
    99 000000EA C6 42 04 01                     	MOV	BYTE [4+EDX],1
   100 000000EE 84 C0                           	TEST	AL,AL
   101 000000F0 74 09                           	JE	L10
   102 000000F2 81 C9 FFFFFF00                  	OR	ECX,-256
   103 000000F8 89 4A 05                        	MOV	DWORD [5+EDX],ECX
   104 000000FB                                 L10:
   105 000000FB 83 E3 20                        	AND	EBX,32
   106 000000FE 84 DB                           	TEST	BL,BL
   107 00000100 74 07                           	JE	L11
   108 00000102 81 4A 09 FFFFFF00               	OR	DWORD [9+EDX],-256
   109 00000109                                 L11:
   110 00000109 F7 5A 09                        	NEG	DWORD [9+EDX]
   111 0000010C B8 00000001                     	MOV	EAX,1
   112 00000111 EB 9A                           	JMP	L3
   113 00000113                                 L15:
   114 00000113 88 4A 01                        	MOV	BYTE [1+EDX],CL
   115 00000116 C6 42 04 03                     	MOV	BYTE [4+EDX],3
   116 0000011A EB 8F                           	JMP	L12
   117 0000011C                                 L14:
   118 0000011C 83 E6 C8                        	AND	ESI,-56
   119 0000011F 89 F0                           	MOV	EAX,ESI
   120 00000121 3C 08                           	CMP	AL,8
   121 00000123 75 86                           	JNE	L12
   122 00000125 88 0A                           	MOV	BYTE [EDX],CL
   123 00000127 C6 42 04 02                     	MOV	BYTE [4+EDX],2
   124 0000012B E9 FFFFFF7B                     	JMP	L12
   125 00000130                                 	GLOBAL	_mouse_decode_wheel
   126 00000130                                 _mouse_decode_wheel:
   127 00000130 55                              	PUSH	EBP
   128 00000131 89 E5                           	MOV	EBP,ESP
   129 00000133 53                              	PUSH	EBX
   130 00000134 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   131 00000137 8B 5D 0C                        	MOV	EBX,DWORD [12+EBP]
   132 0000013A 88 D9                           	MOV	CL,BL
   133 0000013C 8A 42 04                        	MOV	AL,BYTE [4+EDX]
   134 0000013F 84 C0                           	TEST	AL,AL
   135 00000141 75 10                           	JNE	L18
   136 00000143 80 FB FA                        	CMP	BL,-6
   137 00000146 74 05                           	JE	L28
   138 00000148                                 L27:
   139 00000148 31 C0                           	XOR	EAX,EAX
   140 0000014A                                 L17:
   141 0000014A 5B                              	POP	EBX
   142 0000014B 5D                              	POP	EBP
   143 0000014C C3                              	RET
   144 0000014D                                 L28:
   145 0000014D C6 42 04 01                     	MOV	BYTE [4+EDX],1
   146 00000151 EB F5                           	JMP	L27
   147 00000153                                 L18:
   148 00000153 3C 01                           	CMP	AL,1
   149 00000155 74 76                           	JE	L29
   150 00000157 3C 02                           	CMP	AL,2
   151 00000159 74 66                           	JE	L30
   152 0000015B 3C 03                           	CMP	AL,3
   153 0000015D 74 59                           	JE	L31
   154 0000015F 3C 04                           	CMP	AL,4
   155 00000161 74 05                           	JE	L32
   156 00000163 83 C8 FF                        	OR	EAX,-1
   157 00000166 EB E2                           	JMP	L17
   158 00000168                                 L32:
   159 00000168 88 5A 03                        	MOV	BYTE [3+EDX],BL
   160 0000016B 8A 1A                           	MOV	BL,BYTE [EDX]
   161 0000016D 89 D8                           	MOV	EAX,EBX
   162 0000016F 83 E0 07                        	AND	EAX,7
   163 00000172 89 42 0D                        	MOV	DWORD [13+EDX],EAX
   164 00000175 0F B6 42 02                     	MOVZX	EAX,BYTE [2+EDX]
   165 00000179 89 42 09                        	MOV	DWORD [9+EDX],EAX
   166 0000017C 88 D8                           	MOV	AL,BL
   167 0000017E 0F B6 4A 01                     	MOVZX	ECX,BYTE [1+EDX]
   168 00000182 83 E0 10                        	AND	EAX,16
   169 00000185 89 4A 05                        	MOV	DWORD [5+EDX],ECX
   170 00000188 C6 42 04 01                     	MOV	BYTE [4+EDX],1
   171 0000018C 84 C0                           	TEST	AL,AL
   172 0000018E 74 09                           	JE	L25
   173 00000190 81 C9 FFFFFF00                  	OR	ECX,-256
   174 00000196 89 4A 05                        	MOV	DWORD [5+EDX],ECX
   175 00000199                                 L25:
   176 00000199 83 E3 20                        	AND	EBX,32
   177 0000019C 84 DB                           	TEST	BL,BL
   178 0000019E 74 07                           	JE	L26
   179 000001A0 81 4A 09 FFFFFF00               	OR	DWORD [9+EDX],-256
   180 000001A7                                 L26:
   181 000001A7 F7 5A 09                        	NEG	DWORD [9+EDX]
   182 000001AA 0F B6 42 03                     	MOVZX	EAX,BYTE [3+EDX]
   183 000001AE 89 42 11                        	MOV	DWORD [17+EDX],EAX
   184 000001B1 B8 00000001                     	MOV	EAX,1
   185 000001B6 EB 92                           	JMP	L17
   186 000001B8                                 L31:
   187 000001B8 88 5A 02                        	MOV	BYTE [2+EDX],BL
   188 000001BB C6 42 04 04                     	MOV	BYTE [4+EDX],4
   189 000001BF EB 87                           	JMP	L27
   190 000001C1                                 L30:
   191 000001C1 88 5A 01                        	MOV	BYTE [1+EDX],BL
   192 000001C4 C6 42 04 03                     	MOV	BYTE [4+EDX],3
   193 000001C8 E9 FFFFFF7B                     	JMP	L27
   194 000001CD                                 L29:
   195 000001CD 83 E1 C8                        	AND	ECX,-56
   196 000001D0 80 F9 08                        	CMP	CL,8
   197 000001D3 0F 85 FFFFFF6F                  	JNE	L27
   198 000001D9 88 1A                           	MOV	BYTE [EDX],BL
   199 000001DB C6 42 04 02                     	MOV	BYTE [4+EDX],2
   200 000001DF E9 FFFFFF64                     	JMP	L27
   201 000001E4                                 	GLOBAL	_mousefifo
   202                                          [SECTION .data]
   203 00000000                                 	ALIGNB	4
   204 00000000                                 _mousefifo:
   205 00000000 00 00 00 00                     	RESB	4
   206 00000004                                 	GLOBAL	_mousedata0
   207                                          [SECTION .data]
   208 00000004                                 	ALIGNB	4
   209 00000004                                 _mousedata0:
   210 00000004 00 00 00 00                     	RESB	4
